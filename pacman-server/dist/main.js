/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pacman-server/src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./pacman-server/src/index.js":
/*!************************************!*\
  !*** ./pacman-server/src/index.js ***!
  \************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pacnmanv2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pacnmanv2 */ \"./pacman-server/src/pacnmanv2.js\");\n/* harmony import */ var _pacman__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pacman */ \"./pacman-server/src/pacman.js\");\n \n\n \n\n\n$(() =>{\n    var socket = io();\n    socket.on('action', function (action) {\n        let direction = action.action;\n        let player = action.player\n        _pacnmanv2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].move(player,direction);\n        _pacman__WEBPACK_IMPORTED_MODULE_1__[\"default\"].move(player,direction);\n    });\n});\nsetTimeout( () =>{\n    _pacnmanv2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startGameplayNoGhost(); \n    _pacman__WEBPACK_IMPORTED_MODULE_1__[\"default\"].startGameplayNoGhost(); \n}, 2000)\n\n\n//# sourceURL=webpack:///./pacman-server/src/index.js?");

/***/ }),

/***/ "./pacman-server/src/pacman.js":
/*!*************************************!*\
  !*** ./pacman-server/src/pacman.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * Copyright 2018\n * Google LLC\n * PAC-MAN TM & Â©BANDAI NAMCO Entertainment Inc.\n */\n\nwindow.google = {};\ngoogle.dom = {};\ngoogle.pacManSound = true;\ngoogle.browser = {};\ngoogle.browser.engine = {}\n\nconst spriteURL = 'https://storage.googleapis.com/tfjs-examples/assets/webcam-transfer-learning/pacman-sprite.png';\n\ngoogle.dom.remove = a => a && a.parentNode && a.parentNode.removeChild(a);\n\ngoogle.dom.append = a => document.body.appendChild(a);\n\nconst TRUE = true;\nconst FALSE = false;\nconst g = {};\nconst i = [1, 4, 2, 8];\nconst l = {\n  0: {\n    axis: 0,\n    increment: 0\n  },\n  1: {\n    axis: 0,\n    increment: -1\n  },\n  2: {\n    axis: 0,\n    increment: +1\n  },\n  4: {\n    axis: 1,\n    increment: -1\n  },\n  8: {\n    axis: 1,\n    increment: +1\n  }\n};\n\nconst m = [0, 7, 17, 32];\n\nconst n = [{\n  x: 5,\n  y: 1,\n  w: 56\n},\n{\n  x: 5,\n  y: 4,\n  w: 5\n},\n{\n  x: 5,\n  y: 1,\n  h: 4\n},\n{\n  x: 9,\n  y: 1,\n  h: 12\n},\n{\n  x: 5,\n  y: 12,\n  h: 4\n},\n{\n  x: 10,\n  y: 12,\n  h: 4\n},\n{\n  x: 5,\n  y: 15,\n  w: 16\n},\n{\n  x: 5,\n  y: 12,\n  w: 31\n},\n{\n  x: 60,\n  y: 1,\n  h: 4\n},\n{\n  x: 54,\n  y: 1,\n  h: 4\n},\n{\n  x: 19,\n  y: 1,\n  h: 12\n},\n{\n  x: 19,\n  y: 4,\n  w: 26\n},\n{\n  x: 13,\n  y: 5,\n  w: 7\n},\n{\n  x: 13,\n  y: 5,\n  h: 4\n},\n{\n  x: 13,\n  y: 8,\n  w: 3\n},\n{\n  x: 56,\n  y: 4,\n  h: 9\n},\n{\n  x: 48,\n  y: 4,\n  w: 13\n},\n{\n  x: 48,\n  y: 1,\n  h: 12\n},\n{\n  x: 60,\n  y: 12,\n  h: 4\n},\n{\n  x: 44,\n  y: 15,\n  w: 17\n},\n{\n  x: 54,\n  y: 12,\n  h: 4\n},\n{\n  x: 44,\n  y: 12,\n  w: 17\n},\n{\n  x: 44,\n  y: 1,\n  h: 15\n},\n{\n  x: 41,\n  y: 13,\n  w: 4\n},\n{\n  x: 41,\n  y: 13,\n  h: 3\n},\n{\n  x: 38,\n  y: 13,\n  h: 3\n},\n{\n  x: 38,\n  y: 15,\n  w: 4\n},\n{\n  x: 35,\n  y: 10,\n  w: 10\n},\n{\n  x: 35,\n  y: 1,\n  h: 15\n},\n{\n  x: 35,\n  y: 13,\n  w: 4\n},\n{\n  x: 21,\n  y: 12,\n  h: 4\n},\n{\n  x: 24,\n  y: 12,\n  h: 4\n},\n{\n  x: 24,\n  y: 15,\n  w: 12\n},\n{\n  x: 27,\n  y: 4,\n  h: 9\n},\n{\n  x: 52,\n  y: 9,\n  w: 5\n},\n{\n  x: 56,\n  y: 8,\n  w: 10,\n  type: 1\n},\n{\n  x: 1,\n  y: 8,\n  w: 9,\n  type: 1\n}];\n\nconst o = [{\n  x: 1,\n  y: 8,\n  w: 8\n},\n{\n  x: 57,\n  y: 8,\n  w: 9\n},\n{\n  x: 44,\n  y: 2,\n  h: 10\n},\n{\n  x: 35,\n  y: 5,\n  h: 7\n},\n{\n  x: 36,\n  y: 4,\n  w: 8\n},\n{\n  x: 36,\n  y: 10,\n  w: 8\n},\n{\n  x: 39,\n  y: 15,\n  w: 2\n}];\n\nconst p = [{\n  x: 5,\n  y: 15\n},\n{\n  x: 5,\n  y: 3\n},\n{\n  x: 15,\n  y: 8\n},\n{\n  x: 60,\n  y: 3\n},\n{\n  x: 60,\n  y: 15\n}];\n\nconst q = [{\n  x: 2,\n  y: 8\n},\n{\n  x: 63,\n  y: 8\n}];\n\nconst r = {\n  1: [{\n    x: 39.5,\n    y: 15,\n    dir: 4\n  },\n  {\n    x: 39.5,\n    y: 4,\n    dir: 4,\n    scatterX: 57,\n    scatterY: -4\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 2,\n    scatterX: 0,\n    scatterY: -4\n  },\n  {\n    x: 37.625,\n    y: 7,\n    dir: 1,\n    scatterX: 57,\n    scatterY: 20\n  },\n  {\n    x: 41.375,\n    y: 7,\n    dir: 1,\n    scatterX: 0,\n    scatterY: 20\n  }],\n  2: [{\n    x: 40.25,\n    y: 15,\n    dir: 8\n  },\n  {\n    x: 38.75,\n    y: 15,\n    dir: 4\n  },\n  {\n    x: 39.5,\n    y: 4,\n    dir: 4,\n    scatterX: 57,\n    scatterY: -4\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 2,\n    scatterX: 0,\n    scatterY: -4\n  },\n  {\n    x: 37.625,\n    y: 7,\n    dir: 1,\n    scatterX: 57,\n    scatterY: 20\n  },\n  {\n    x: 41.375,\n    y: 7,\n    dir: 1,\n    scatterX: 0,\n    scatterY: 20\n  }]\n};\n\nconst s = [32, 312];\nconst v = [80, 312];\n\nconst w = {\n  0: 0.16,\n  1: 0.23,\n  2: 1,\n  3: 1,\n  4: 2.23,\n  5: 0.3,\n  6: 1.9,\n  7: 2.23,\n  8: 1.9,\n  9: 5,\n  10: 1.9,\n  11: 1.18,\n  12: 0.3,\n  13: 0.5,\n  14: 1.9,\n  15: 9,\n  16: 10,\n  17: 0.26\n};\n\nconst y = 0.8 * 0.4;\n\nconst z = [{},\n{\n  ghostSpeed: 0.75,\n  ghostTunnelSpeed: 0.4,\n  playerSpeed: 0.8,\n  dotEatingSpeed: 0.71,\n  ghostFrightSpeed: 0.5,\n  playerFrightSpeed: 0.9,\n  dotEatingFrightSpeed: 0.79,\n  elroyDotsLeftPart1: 20,\n  elroySpeedPart1: 0.8,\n  elroyDotsLeftPart2: 10,\n  elroySpeedPart2: 0.85,\n  frightTime: 6,\n  frightBlinkCount: 5,\n  fruit: 1,\n  fruitScore: 100,\n  ghostModeSwitchTimes: [7, 20, 7, 20, 5, 20, 5, 1],\n  penForceTime: 4,\n  penLeavingLimits: [0, 0, 30, 60]\n},\n{\n  ghostSpeed: 0.85,\n  ghostTunnelSpeed: 0.45,\n  playerSpeed: 0.9,\n  dotEatingSpeed: 0.79,\n  ghostFrightSpeed: 0.55,\n  playerFrightSpeed: 0.95,\n  dotEatingFrightSpeed: 0.83,\n  elroyDotsLeftPart1: 30,\n  elroySpeedPart1: 0.9,\n  elroyDotsLeftPart2: 15,\n  elroySpeedPart2: 0.95,\n  frightTime: 5,\n  frightBlinkCount: 5,\n  fruit: 2,\n  fruitScore: 300,\n  ghostModeSwitchTimes: [7, 20, 7, 20, 5, 1033, 1 / 60, 1],\n  penForceTime: 4,\n  penLeavingLimits: [0, 0, 0, 50],\n  cutsceneId: 1\n},\n{\n  ghostSpeed: 0.85,\n  ghostTunnelSpeed: 0.45,\n  playerSpeed: 0.9,\n  dotEatingSpeed: 0.79,\n  ghostFrightSpeed: 0.55,\n  playerFrightSpeed: 0.95,\n  dotEatingFrightSpeed: 0.83,\n  elroyDotsLeftPart1: 40,\n  elroySpeedPart1: 0.9,\n  elroyDotsLeftPart2: 20,\n  elroySpeedPart2: 0.95,\n  frightTime: 4,\n  frightBlinkCount: 5,\n  fruit: 3,\n  fruitScore: 500,\n  ghostModeSwitchTimes: [7, 20, 7, 20, 5, 1033, 1 / 60, 1],\n  penForceTime: 4,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.85,\n  ghostTunnelSpeed: 0.45,\n  playerSpeed: 0.9,\n  dotEatingSpeed: 0.79,\n  ghostFrightSpeed: 0.55,\n  playerFrightSpeed: 0.95,\n  dotEatingFrightSpeed: 0.83,\n  elroyDotsLeftPart1: 40,\n  elroySpeedPart1: 0.9,\n  elroyDotsLeftPart2: 20,\n  elroySpeedPart2: 0.95,\n  frightTime: 3,\n  frightBlinkCount: 5,\n  fruit: 3,\n  fruitScore: 500,\n  ghostModeSwitchTimes: [7, 20, 7, 20, 5, 1033, 1 / 60, 1],\n  penForceTime: 4,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 40,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 20,\n  elroySpeedPart2: 1.05,\n  frightTime: 2,\n  frightBlinkCount: 5,\n  fruit: 4,\n  fruitScore: 700,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0],\n  cutsceneId: 2\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 50,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 25,\n  elroySpeedPart2: 1.05,\n  frightTime: 5,\n  frightBlinkCount: 5,\n  fruit: 4,\n  fruitScore: 700,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 50,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 25,\n  elroySpeedPart2: 1.05,\n  frightTime: 2,\n  frightBlinkCount: 5,\n  fruit: 5,\n  fruitScore: 1E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 50,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 25,\n  elroySpeedPart2: 1.05,\n  frightTime: 2,\n  frightBlinkCount: 5,\n  fruit: 5,\n  fruitScore: 1E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 60,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 30,\n  elroySpeedPart2: 1.05,\n  frightTime: 1,\n  frightBlinkCount: 3,\n  fruit: 6,\n  fruitScore: 2E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0],\n  cutsceneId: 3\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 60,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 30,\n  elroySpeedPart2: 1.05,\n  frightTime: 5,\n  frightBlinkCount: 5,\n  fruit: 6,\n  fruitScore: 2E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 60,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 30,\n  elroySpeedPart2: 1.05,\n  frightTime: 2,\n  frightBlinkCount: 5,\n  fruit: 7,\n  fruitScore: 3E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 80,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 40,\n  elroySpeedPart2: 1.05,\n  frightTime: 1,\n  frightBlinkCount: 3,\n  fruit: 7,\n  fruitScore: 3E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 80,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 40,\n  elroySpeedPart2: 1.05,\n  frightTime: 1,\n  frightBlinkCount: 3,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0],\n  cutsceneId: 3\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 80,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 40,\n  elroySpeedPart2: 1.05,\n  frightTime: 3,\n  frightBlinkCount: 5,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 100,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 50,\n  elroySpeedPart2: 1.05,\n  frightTime: 1,\n  frightBlinkCount: 3,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 100,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 50,\n  elroySpeedPart2: 1.05,\n  frightTime: 1,\n  frightBlinkCount: 3,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 100,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 50,\n  elroySpeedPart2: 1.05,\n  frightTime: 0,\n  frightBlinkCount: 0,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0],\n  cutsceneId: 3\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 100,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 50,\n  elroySpeedPart2: 1.05,\n  frightTime: 1,\n  frightBlinkCount: 3,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 120,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 60,\n  elroySpeedPart2: 1.05,\n  frightTime: 0,\n  frightBlinkCount: 0,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 1,\n  dotEatingSpeed: 0.87,\n  ghostFrightSpeed: 0.6,\n  playerFrightSpeed: 1,\n  dotEatingFrightSpeed: 0.87,\n  elroyDotsLeftPart1: 120,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 60,\n  elroySpeedPart2: 1.05,\n  frightTime: 0,\n  frightBlinkCount: 0,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n},\n{\n  ghostSpeed: 0.95,\n  ghostTunnelSpeed: 0.5,\n  playerSpeed: 0.9,\n  dotEatingSpeed: 0.79,\n  ghostFrightSpeed: 0.75,\n  playerFrightSpeed: 0.9,\n  dotEatingFrightSpeed: 0.79,\n  elroyDotsLeftPart1: 120,\n  elroySpeedPart1: 1,\n  elroyDotsLeftPart2: 60,\n  elroySpeedPart2: 1.05,\n  frightTime: 0,\n  frightBlinkCount: 0,\n  fruit: 8,\n  fruitScore: 5E3,\n  ghostModeSwitchTimes: [5, 20, 5, 20, 5, 1037, 1 / 60, 1],\n  penForceTime: 3,\n  penLeavingLimits: [0, 0, 0, 0]\n}];\n \nconst A = {\n  1: [{\n    x: 37.6,\n    y: 7,\n    dir: 1,\n    dest: 6.375,\n    speed: 0.48\n  },\n  {\n    x: 37.6,\n    y: 6.375,\n    dir: 2,\n    dest: 7.625,\n    speed: 0.48\n  },\n  {\n    x: 37.6,\n    y: 7.625,\n    dir: 1,\n    dest: 7,\n    speed: 0.48\n  }],\n  2: [{\n    x: 39.5,\n    y: 7,\n    dir: 2,\n    dest: 7.625,\n    speed: 0.48\n  },\n  {\n    x: 39.5,\n    y: 7.625,\n    dir: 1,\n    dest: 6.375,\n    speed: 0.48\n  },\n  {\n    x: 39.5,\n    y: 6.375,\n    dir: 2,\n    dest: 7,\n    speed: 0.48\n  }],\n  3: [{\n    x: 41.4,\n    y: 7,\n    dir: 1,\n    dest: 6.375,\n    speed: 0.48\n  },\n  {\n    x: 41.4,\n    y: 6.375,\n    dir: 2,\n    dest: 7.625,\n    speed: 0.48\n  },\n  {\n    x: 41.4,\n    y: 7.625,\n    dir: 1,\n    dest: 7,\n    speed: 0.48\n  }],\n  4: [{\n    x: 37.6,\n    y: 7,\n    dir: 8,\n    dest: 39.5,\n    speed: y\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 1,\n    dest: 4,\n    speed: y\n  }],\n  5: [{\n    x: 39.5,\n    y: 7,\n    dir: 1,\n    dest: 4,\n    speed: y\n  }],\n  6: [{\n    x: 41.4,\n    y: 7,\n    dir: 4,\n    dest: 39.5,\n    speed: y\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 1,\n    dest: 4,\n    speed: y\n  }],\n  7: [{\n    x: 39.5,\n    y: 4,\n    dir: 2,\n    dest: 7,\n    speed: 1.6\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 4,\n    dest: 37.625,\n    speed: 1.6\n  }],\n  8: [{\n    x: 39.5,\n    y: 4,\n    dir: 2,\n    dest: 7,\n    speed: 1.6\n  }],\n  9: [{\n    x: 39.5,\n    y: 4,\n    dir: 2,\n    dest: 7,\n    speed: 1.6\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 8,\n    dest: 41.375,\n    speed: 1.6\n  }],\n  10: [{\n    x: 37.6,\n    y: 7,\n    dir: 8,\n    dest: 39.5,\n    speed: y\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 1,\n    dest: 4,\n    speed: y\n  }],\n  11: [{\n    x: 39.5,\n    y: 7,\n    dir: 1,\n    dest: 4,\n    speed: y\n  }],\n  12: [{\n    x: 41.4,\n    y: 7,\n    dir: 4,\n    dest: 39.5,\n    speed: y\n  },\n  {\n    x: 39.5,\n    y: 7,\n    dir: 1,\n    dest: 4,\n    speed: y\n  }]\n};\n\nconst B = {\n  1: {\n    actors: [{\n      ghost: FALSE,\n      x: 64,\n      y: 9,\n      id: 0\n    },\n    {\n      ghost: TRUE,\n      x: 68.2,\n      y: 9,\n      id: 1\n    }],\n    sequence: [{\n      time: 5.5,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0.78 * 0.8 * 2\n      }]\n    },\n    {\n      time: 0.1,\n      moves: [{\n        dir: 4,\n        speed: 32\n      },\n      {\n        dir: 4,\n        speed: 0\n      }]\n    },\n    {\n      time: 9,\n      moves: [{\n        dir: 8,\n        speed: 0.75 * 0.8 * 2,\n        elId: \"pcm-bpcm\"\n      },\n      {\n        dir: 8,\n        speed: 0.8,\n        mode: 4\n      }]\n    }]\n  },\n  2: {\n    actors: [{\n      ghost: FALSE,\n      x: 64,\n      y: 9,\n      id: 0\n    },\n    {\n      ghost: TRUE,\n      x: 70.2,\n      y: 9,\n      id: 1\n    },\n    {\n      ghost: TRUE,\n      x: 32,\n      y: 9.5,\n      id: 2\n    }],\n    sequence: [{\n      time: 2.7,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0.78 * 0.8 * 2\n      },\n      {\n        dir: 0,\n        speed: 0,\n        elId: \"pcm-stck\"\n      }]\n    },\n    {\n      time: 1,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0.1 * 0.8\n      },\n      {\n        dir: 0,\n        speed: 0,\n        elId: \"pcm-stck\"\n      }]\n    },\n    {\n      time: 1.3,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0\n      },\n      {\n        dir: 0,\n        speed: 0,\n        elId: \"pcm-stck\"\n      }]\n    },\n    {\n      time: 1,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0,\n        elId: \"pcm-ghfa\"\n      },\n      {\n        dir: 0,\n        speed: 0,\n        elId: \"pcm-stck\"\n      }]\n    },\n    {\n      time: 2.5,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0,\n        elId: \"pcm-ghfa\"\n      },\n      {\n        dir: 0,\n        speed: 0,\n        elId: \"pcm-stck\"\n      }]\n    }]\n  },\n  3: {\n    actors: [{\n      ghost: FALSE,\n      x: 64,\n      y: 9,\n      id: 0\n    },\n    {\n      ghost: TRUE,\n      x: 70.2,\n      y: 9,\n      id: 2\n    }],\n    sequence: [{\n      time: 5.3,\n      moves: [{\n        dir: 4,\n        speed: 0.75 * 0.8 * 2\n      },\n      {\n        dir: 4,\n        speed: 0.78 * 0.8 * 2,\n        elId: \"pcm-ghin\"\n      }]\n    },\n    {\n      time: 5.3,\n      moves: [{\n        dir: 4,\n        speed: 0\n      },\n      {\n        dir: 8,\n        speed: 0.78 * 0.8 * 2,\n        elId: \"pcm-gbug\"\n      }]\n    }]\n  }\n};\n\nconst C = [90, 60, 45];\nconst D = C[0];\nlet GHOST_NUMBER = 0;\nlet googlePacman = (() => {\n\n\n\n\n  class Actor {\n    constructor(id) {\n      this.id = id\n    }\n\n    A() {\n      const b = r[g.playerCount][this.id];\n      this.pos = [b.y * 8, b.x * 8];\n      this.posDelta = [0, 0];\n      this.tilePos = [b.y * 8, b.x * 8];\n      this.targetPos = [b.scatterY * 8, b.scatterX * 8];\n      this.scatterPos = [b.scatterY * 8, b.scatterX * 8];\n      this.lastActiveDir = this.dir = b.dir;\n      this.physicalSpeed = this.requestedDir = this.nextDir = 0;\n      this.c(0);\n      this.reverseDirectionsNext = this.freeToLeavePen = this.modeChangedWhileInPen = this.eatenInThisFrightMode = FALSE;\n      this.l()\n    }\n\n    createElement() {\n      this.el = document.createElement(\"div\");\n      this.el.className = \"pcm-ac\";\n      this.el.id = `actor${this.id}`;\n      g.prepareElement(this.el, 0, 0);\n      g.playfieldEl.appendChild(this.el);\n      this.elPos = [0, 0];\n      this.elBackgroundPos = [0, 0]\n    }\n\n    a(b) {\n      const c = this.mode;\n      this.mode = b;\n      if (this.id == g.playerCount + 3 && (b == 16 || c == 16)) g.updateCruiseElroySpeed();\n      switch (c) {\n        case 32:\n          g.ghostExitingPenNow = FALSE;\n          break;\n        case 8:\n          g.ghostEyesCount > 0 && g.ghostEyesCount--;\n          g.ghostEyesCount == 0 && g.playAmbientSound();\n          break\n      }\n      switch (b) {\n        case 4:\n          this.fullSpeed = g.levels.ghostFrightSpeed * 0.8;\n          this.tunnelSpeed = g.levels.ghostTunnelSpeed * 0.8;\n          this.followingRoutine = FALSE;\n          break;\n        case 1:\n          this.fullSpeed = g.levels.ghostSpeed * 0.8;\n          this.tunnelSpeed = g.levels.ghostTunnelSpeed * 0.8;\n          this.followingRoutine =\n            FALSE;\n          break;\n        case 2:\n          this.targetPos = this.scatterPos;\n          this.fullSpeed = g.levels.ghostSpeed * 0.8;\n          this.tunnelSpeed = g.levels.ghostTunnelSpeed * 0.8;\n          this.followingRoutine = FALSE;\n          break;\n        case 8:\n          this.tunnelSpeed = this.fullSpeed = 1.6;\n          this.targetPos = [s[0], s[1]];\n          this.freeToLeavePen = this.followingRoutine = FALSE;\n          break;\n        case 16:\n          this.l();\n          this.followingRoutine = TRUE;\n          this.routineMoveId = -1;\n          switch (this.id) {\n            case g.playerCount + 1:\n              this.routineToFollow = 2;\n              break;\n            case g.playerCount + 2:\n              this.routineToFollow = 1;\n              break;\n            case g.playerCount + 3:\n              this.routineToFollow =\n                3;\n              break\n          }\n          break;\n        case 32:\n          this.followingRoutine = TRUE;\n          this.routineMoveId = -1;\n          switch (this.id) {\n            case g.playerCount + 1:\n              this.routineToFollow = 5;\n              break;\n            case g.playerCount + 2:\n              this.routineToFollow = 4;\n              break;\n            case g.playerCount + 3:\n              this.routineToFollow = 6;\n              break\n          }\n          g.ghostExitingPenNow = TRUE;\n          break;\n        case 64:\n          this.followingRoutine = TRUE;\n          this.routineMoveId = -1;\n          switch (this.id) {\n            case g.playerCount:\n            case g.playerCount + 1:\n              this.routineToFollow = 8;\n              break;\n            case g.playerCount + 2:\n              this.routineToFollow = 7;\n              break;\n            case g.playerCount + 3:\n              this.routineToFollow = 9;\n              break\n          }\n          break;\n        case 128:\n          this.followingRoutine = TRUE;\n          this.routineMoveId = -1;\n          switch (this.id) {\n            case g.playerCount:\n            case g.playerCount + 1:\n              this.routineToFollow = 11;\n              break;\n            case g.playerCount + 2:\n              this.routineToFollow = 10;\n              break;\n            case g.playerCount + 3:\n              this.routineToFollow = 12;\n              break\n          }\n          break\n      }\n      this.d()\n    }\n\n    l() {\n      if (this.id >= g.playerCount) this.targetPlayerId = Math.floor(g.rand() * g.playerCount)\n    }\n\n    z(b) {\n      if (!g.userDisabledSound) {\n        google.pacManSound = TRUE;\n        g.updateSoundIcon()\n      }\n      if (this.dir == g.oppositeDirections[b]) {\n        this.dir = b;\n        this.posDelta = [0, 0];\n        this.currentSpeed != 2 && this.c(0);\n        if (this.dir != 0) this.lastActiveDir = this.dir;\n        this.nextDir = 0\n      } else if (this.dir != b) if (this.dir == 0) {\n        if (g.playfield[this.pos[0]][this.pos[1]].allowedDir & b) this.dir = b\n      } else {\n        let c = g.playfield[this.tilePos[0]][this.tilePos[1]];\n        if (c && c.allowedDir & b) {\n          c = l[this.dir];\n          const d = [this.pos[0], this.pos[1]];\n          d[c.axis] -= c.increment;\n          let f = 0;\n          if (d[0] == this.tilePos[0] && d[1] == this.tilePos[1]) f = 1;\n          else {\n            d[c.axis] -= c.increment;\n            if (d[0] == this.tilePos[0] && d[1] == this.tilePos[1]) f = 2\n          }\n          if (f) {\n            this.dir = b;\n            this.pos[0] = this.tilePos[0];\n            this.pos[1] = this.tilePos[1];\n            c = l[this.dir];\n            this.pos[c.axis] += c.increment * f;\n            return\n          }\n        }\n        this.nextDir = b;\n        this.posDelta = [0, 0]\n      }\n    }\n\n    i(b) {\n      let c = this.tilePos;\n      let d = l[this.dir];\n      let f = [c[0], c[1]];\n      f[d.axis] += d.increment * 8;\n      let h = g.playfield[f[0]][f[1]];\n      if (b && !h.intersection) h = g.playfield[c[0]][c[1]];\n      if (h.intersection) switch (this.mode) {\n        case 2:\n        case 1:\n        case 8:\n          if ((this.dir & h.allowedDir) == 0 && h.allowedDir == g.oppositeDirections[this.dir]) this.nextDir = g.oppositeDirections[this.dir];\n          else {\n            b = 99999999999;\n            c = 0;\n            for (const j in i) {\n              const k = i[j];\n              if (h.allowedDir & k && this.dir != g.oppositeDirections[k]) {\n                d = l[k];\n                const x = [f[0], f[1]];\n                x[d.axis] += d.increment;\n                d = g.getDistance(x, [this.targetPos[0], this.targetPos[1]]);\n                if (d < b) {\n                  b = d;\n                  c = k\n                }\n              }\n            }\n            if (c) this.nextDir = c\n          }\n          break;\n        case 4:\n          if ((this.dir & h.allowedDir) == 0 && h.allowedDir == g.oppositeDirections[this.dir]) this.nextDir = g.oppositeDirections[this.dir];\n          else {\n            do f = i[Math.floor(g.rand() * 4)];\n            while ((f & h.allowedDir) == 0 || f == g.oppositeDirections[this.dir]);\n            this.nextDir = f\n          }\n          break\n      }\n    }\n\n    p(b) {\n      g.tilesChanged = TRUE;\n      if (this.reverseDirectionsNext) {\n        this.dir = g.oppositeDirections[this.dir];\n        this.nextDir = 0;\n        this.reverseDirectionsNext = FALSE;\n        this.i(TRUE)\n      }\n      if (!this.ghost && !g.playfield[b[0]][b[1]].path) {\n        this.pos[0] = this.lastGoodTilePos[0];\n        this.pos[1] = this.lastGoodTilePos[1];\n        b[0] = this.lastGoodTilePos[0];\n        b[1] = this.lastGoodTilePos[1];\n        this.dir = 0\n      } else this.lastGoodTilePos = [b[0], b[1]];\n      g.playfield[b[0]][b[1]].type == 1 && this.mode != 8 ? this.c(2) : this.c(0);\n      !this.ghost && g.playfield[b[0]][b[1]].dot && g.dotEaten(this.id, b);\n      this.tilePos[0] = b[0];\n      this.tilePos[1] = b[1]\n    }\n\n    t() {\n      let b = this.tilePos;\n      let c;\n      let d;\n      switch (this.dir) {\n        case 1:\n           c = [b[0], b[1]];\n           d = [b[0] + 3.6, b[1]];\n          break;\n        case 2:\n          c = [b[0] - 4, b[1]];\n          d = [b[0], b[1]];\n          break;\n        case 4:\n          c = [b[0], b[1]];\n          d = [b[0], b[1] + 3.6];\n          break;\n        case 8:\n          c = [b[0], b[1] - 4];\n          d = [b[0], b[1]];\n          break\n      }\n      if (this.pos[0] >= c[0] && this.pos[0] <= d[0] && this.pos[1] >= c[1] && this.pos[1] <= d[1]) {\n        b = l[this.nextDir];\n        this.posDelta[b.axis] += b.increment\n      }\n    }\n\n    n() {\n      if (this.pos[0] == q[0].y * 8 && this.pos[1] == q[0].x * 8) {\n        this.pos[0] = q[1].y * 8;\n        this.pos[1] = (q[1].x - 1) * 8\n      } else if (this.pos[0] == q[1].y * 8 && this.pos[1] == q[1].x * 8) {\n        this.pos[0] = q[0].y * 8;\n        this.pos[1] = (q[0].x + 1) * 8\n      }\n      this.mode == 8 && this.pos[0] == s[0] && this.pos[1] == s[1] && this.a(64);\n      if (!this.ghost && this.pos[0] == v[0] && (this.pos[1] == v[1] || this.pos[1] == v[1] + 8)) g.eatFruit(this.id)\n    }\n\n    u() {\n      this.n();\n      this.ghost && this.i(FALSE);\n      const b = g.playfield[this.pos[0]][this.pos[1]];\n      if (b.intersection) if (this.nextDir && this.nextDir & b.allowedDir) {\n        if (this.dir != 0) this.lastActiveDir = this.dir;\n        this.dir = this.nextDir;\n        this.nextDir = 0;\n        if (!this.ghost) {\n          this.pos[0] += this.posDelta[0];\n          this.pos[1] += this.posDelta[1];\n          this.posDelta = [0, 0]\n        }\n      } else if ((this.dir & b.allowedDir) == 0) {\n        if (this.dir != 0) this.lastActiveDir = this.dir;\n        this.nextDir = this.dir = 0;\n        this.c(0)\n      }\n    }\n\n    o() {\n      let b = this.pos[0] / 8;\n      const c = this.pos[1] / 8;\n      const d = [Math.round(b) * 8, Math.round(c) * 8];\n      if (d[0] != this.tilePos[0] || d[1] != this.tilePos[1]) this.p(d);\n      else {\n        b = [Math.floor(b) * 8, Math.floor(c) * 8];\n        this.pos[1] == b[1] && this.pos[0] == b[0] && this.u()\n      } !this.ghost && this.nextDir && g.playfield[d[0]][d[1]].intersection && this.nextDir & g.playfield[d[0]][d[1]].allowedDir && this.t()\n    }\n\n    B() {\n      if (this.id == g.playerCount && g.dotsRemaining < g.levels.elroyDotsLeftPart1 && this.mode == 2 && (!g.lostLifeOnThisLevel || g.actors[g.playerCount + 3].mode != 16)) {\n        var b = g.actors[this.targetPlayerId];\n        this.targetPos = [b.tilePos[0], b.tilePos[1]]\n      } else if (this.ghost && this.mode == 1) {\n        b = g.actors[this.targetPlayerId];\n        switch (this.id) {\n          case g.playerCount:\n            this.targetPos = [b.tilePos[0], b.tilePos[1]];\n            break;\n          case g.playerCount + 1:\n            this.targetPos = [b.tilePos[0], b.tilePos[1]];\n            let c = l[b.dir];\n            this.targetPos[c.axis] += 32 * c.increment;\n            if (b.dir == 1) this.targetPos[1] -= 32;\n            break;\n          case g.playerCount + 2:\n            const d = g.actors[g.playerCount];\n            const f = [b.tilePos[0], b.tilePos[1]];\n            c = l[b.dir];\n            f[c.axis] += 16 * c.increment;\n            if (b.dir == 1) f[1] -= 16;\n            this.targetPos[0] = f[0] * 2 - d.tilePos[0];\n            this.targetPos[1] = f[1] * 2 - d.tilePos[1];\n            break;\n          case g.playerCount + 3:\n            c = g.getDistance(b.tilePos, this.tilePos);\n            this.targetPos = c > 64 ? [b.tilePos[0], b.tilePos[1]] : this.scatterPos;\n            break\n        }\n      }\n    }\n\n    v() {\n      this.routineMoveId++;\n      if (this.routineMoveId == A[this.routineToFollow].length) if (this.mode == 16 && this.freeToLeavePen && !g.ghostExitingPenNow) {\n        this.eatenInThisFrightMode ? this.a(128) : this.a(32);\n        return\n      } else if (this.mode == 32 || this.mode == 128) {\n        this.pos = [s[0], s[1] + 4];\n        this.dir = this.modeChangedWhileInPen ? 8 : 4;\n        var b = g.mainGhostMode;\n        if (this.mode == 128 && b == 4) b = g.lastMainGhostMode;\n        this.a(b);\n        return\n      } else if (this.mode == 64) {\n        if (this.id == g.playerCount || this.freeToLeavePen) this.a(128);\n        else {\n          this.eatenInThisFrightMode =\n            TRUE;\n          this.a(16)\n        }\n        return\n      } else this.routineMoveId = 0;\n      b = A[this.routineToFollow][this.routineMoveId];\n      this.pos[0] = b.y * 8;\n      this.pos[1] = b.x * 8;\n      this.dir = b.dir;\n      this.physicalSpeed = 0;\n      this.speedIntervals = g.getSpeedIntervals(b.speed);\n      this.proceedToNextRoutineMove = FALSE;\n      this.b()\n    }\n\n    m() {\n      const b = A[this.routineToFollow][this.routineMoveId];\n      if (b) if (this.speedIntervals[g.intervalTime]) {\n        const c = l[this.dir];\n        this.pos[c.axis] += c.increment;\n        switch (this.dir) {\n          case 1:\n          case 4:\n            if (this.pos[c.axis] < b.dest * 8) {\n              this.pos[c.axis] = b.dest * 8;\n              this.proceedToNextRoutineMove = TRUE\n            }\n            break;\n          case 2:\n          case 8:\n            if (this.pos[c.axis] > b.dest * 8) {\n              this.pos[c.axis] = b.dest * 8;\n              this.proceedToNextRoutineMove = TRUE\n            }\n            break\n        }\n        this.b()\n      }\n    }\n\n    j() {\n      if (this.routineMoveId == -1 || this.proceedToNextRoutineMove) this.v();\n      this.m()\n    }\n\n    d() {\n      let b\n      switch (this.currentSpeed) {\n        case 0:\n          b = this.id == g.playerCount && (this.mode == 2 || this.mode == 1) ? g.cruiseElroySpeed : this.fullSpeed;\n          break;\n        case 1:\n          b = this.dotEatingSpeed;\n          break;\n        case 2:\n          b = this.tunnelSpeed;\n          break\n      }\n      if (this.physicalSpeed != b) {\n        this.physicalSpeed = b;\n        this.speedIntervals = g.getSpeedIntervals(this.physicalSpeed)\n      }\n    }\n\n    c(b) {\n      this.currentSpeed = b;\n      this.d()\n    }\n\n    e() {\n      if (this.dir) if (this.speedIntervals[g.intervalTime]) {\n        const b = l[this.dir];\n        this.pos[b.axis] += b.increment;\n        this.o();\n        this.b()\n      }\n    }\n\n    move() {\n      if (g.gameplayMode == 0 || this.ghost && g.gameplayMode == 1 && (this.mode == 8 || this.mode == 64)) {\n        if (this.requestedDir != 0) {\n          this.z(this.requestedDir);\n          this.requestedDir = 0\n        }\n        if (this.followingRoutine) {\n          this.j();\n          this.mode == 64 && this.j()\n        } else {\n          this.e();\n          this.mode == 8 && this.e()\n        }\n      }\n    }\n\n    k() {\n      const b = g.getPlayfieldX(this.pos[1] + this.posDelta[1]);\n      const c = g.getPlayfieldY(this.pos[0] + this.posDelta[0]);\n      if (this.elPos[0] != c || this.elPos[1] != b) {\n        this.elPos[0] = c;\n        this.elPos[1] = b;\n        this.el.style.left = `${b}px`;\n        this.el.style.top = `${c}px`\n      }\n    }\n\n    s() {\n      let b = 0;\n      let c = 0;\n      let d = this.dir;\n      if (d == 0) d = this.lastActiveDir;\n      if (g.gameplayMode == 1 && this.id == g.playerEatingGhostId) {\n        b = 3;\n        c = 0\n      } else if ((g.gameplayMode == 9 || g.gameplayMode == 10) && this.id == 0) {\n        b = 2;\n        c = 0\n      } else if (g.gameplayMode == 4 || g.gameplayMode == 5 || g.gameplayMode == 7) {\n        b = this.id == 0 ? 2 : 4;\n        c = 0\n      } else if (g.gameplayMode == 3) if (this.id == g.playerDyingId) {\n        d = 20 - Math.floor(g.gameplayModeTime / g.timing[4] * 21);\n        if (this.id == 0) {\n          b = d - 1;\n          switch (b) {\n            case -1:\n              b = 0;\n              break;\n            case 11:\n              b = 10;\n              break;\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n              b =\n                11;\n              break\n          }\n          c = 12\n        } else switch (d) {\n          case 0:\n          case 1:\n          case 2:\n          case 6:\n          case 10:\n            b = 4;\n            c = 3;\n            break;\n          case 3:\n          case 7:\n          case 11:\n            b = 4;\n            c = 0;\n            break;\n          case 4:\n          case 8:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n            b = 4;\n            c = 2;\n            break;\n          case 5:\n          case 9:\n            b = 4;\n            c = 1;\n            break\n        }\n      } else {\n        b = 3;\n        c = 0\n      } else if (this.el.id == \"pcm-bpcm\") {\n        b = 14;\n        c = 0;\n        d = Math.floor(g.globalTime * 0.2) % 4;\n        if (d == 3) d = 1;\n        c += 2 * d\n      } else {\n        switch (d) {\n          case 4:\n            c = 0;\n            break;\n          case 8:\n            c = 1;\n            break;\n          case 1:\n            c = 2;\n            break;\n          case 2:\n            c = 3;\n            break\n        }\n        if (g.gameplayMode != 2) b = Math.floor(g.globalTime * 0.3) % 4;\n        if (b == 3 && this.dir == 0) b = 0;\n        if (b == 2 && this.id == 0) b = 0;\n        if (b == 3) {\n          b = 2;\n          if (this.id == 0) c = 0\n        }\n        if (this.id == 1) b += 4\n      }\n      return [c, b]\n    }\n\n    r() {\n      let b = 0;\n      let c = 0;\n      if (g.gameplayMode == 10 || g.gameplayMode == 4 || g.gameplayMode == 3) {\n        b = 3;\n        c = 0\n      } else if (g.gameplayMode == 1 && this.id == g.ghostBeingEatenId) {\n        switch (g.modeScoreMultiplier) {\n          case 2:\n            b = 0;\n            break;\n          case 4:\n            b = 1;\n            break;\n          case 8:\n            b = 2;\n            break;\n          case 16:\n            b = 3;\n            break\n        }\n        c = 11;\n        this.el.className = \"pcm-ac pcm-n\"\n      } else if (this.mode == 4 || (this.mode == 16 || this.mode == 32) && g.mainGhostMode == 4 && !this.eatenInThisFrightMode) {\n        b = 0;\n        c = 8;\n        if (g.frightModeTime < g.levels.frightTotalTime - g.levels.frightTime && Math.floor(g.frightModeTime / g.timing[1]) % 2 == 0) b += 2;\n        b += Math.floor(g.globalTime / 16) % 2\n      } else if (this.mode == 8 || this.mode == 64) {\n        c = this.nextDir;\n        if (!c) c = this.dir;\n        switch (c) {\n          case 4:\n            b = 2;\n            break;\n          case 8:\n            b = 3;\n            break;\n          case 1:\n            b = 0;\n            break;\n          case 2:\n            b = 1;\n            break\n        }\n        c = 10\n      } else if (this.el.id == \"pcm-ghin\") {\n        b = 6;\n        c = 8;\n        b += Math.floor(g.globalTime / 16) % 2\n      } else if (this.el.id == \"pcm-gbug\") {\n        b = 6;\n        c = 9;\n        c += Math.floor(g.globalTime / 16) % 2\n      } else if (this.el.id == \"pcm-ghfa\") {\n        b = g.cutsceneSequenceId == 3 ? 6 : 7;\n        c = 11\n      } else if (this.el.id == \"pcm-stck\") {\n        b = g.cutsceneSequenceId == 1 ? g.cutsceneTime > 60 ? 1 : g.cutsceneTime > 45 ? 2 : 3 : g.cutsceneSequenceId == 2 ? 3 : g.cutsceneSequenceId == 3 || g.cutsceneSequenceId == 4 ? 4 : 0;\n        c = 13\n      } else {\n        c = this.nextDir;\n        if (!c || g.playfield[this.tilePos[0]][this.tilePos[1]].type == 1) c = this.dir;\n        switch (c) {\n          case 4:\n            b = 4;\n            break;\n          case 8:\n            b = 6;\n            break;\n          case 1:\n            b = 0;\n            break;\n          case 2:\n            b = 2;\n            break\n        }\n        c = 4 + this.id - g.playerCount;\n        if (this.speed > 0 || g.gameplayMode != 13) b += Math.floor(g.globalTime / 16) % 2\n      }\n      return [c, b]\n    }\n\n    b() {\n      this.k();\n      let b = [0, 0];\n      b = g.gameplayMode == 8 || g.gameplayMode == 14 ? [0, 3] : this.ghost ? this.r() : this.s();\n      if (this.elBackgroundPos[0] != b[0] || this.elBackgroundPos[1] != b[1]) {\n        this.elBackgroundPos[0] = b[0];\n        this.elBackgroundPos[1] = b[1];\n        b[0] *= 16;\n        b[1] *= 16;\n        g.changeElementBkPos(this.el, b[1], b[0], TRUE)\n      }\n    }\n  }\n\n  g.rand = () => {\n    const b = 4294967296;\n    let c = 134775813;\n    c = c * g.randSeed + 1;\n    return (g.randSeed = c % b) / b\n  };\n  g.seed = b => {\n    g.randSeed = b\n  };\n  g.getDistance = (b, c) => Math.sqrt((c[1] - b[1]) * (c[1] - b[1]) + (c[0] - b[0]) * (c[0] - b[0]));\n  g.getPlayfieldX = b => b + -32;\n  g.getPlayfieldY = b => b + 0;\n  g.getCorrectedSpritePos = b => b / 8 * 10 + 2;\n  g.getDotElementId = (b, c) => `pcm-d${b}-${c}`;\n  g.showElementById = (b, c) => {\n    const d = document.getElementById(b);\n    if (d) d.style.visibility = c ? \"visible\" : \"hidden\"\n  };\n  g.getAbsoluteElPos = b => {\n    const c = [0, 0];\n    do {\n      c[0] += b.offsetTop;\n      c[1] += b.offsetLeft\n    } while (b = b.offsetParent);\n    return c\n  };\n  g.prepareElement = (b, c, d) => {\n    c = g.getCorrectedSpritePos(parseInt(c, 10));\n    d = g.getCorrectedSpritePos(parseInt(d, 10));\n    if (g.useCss) {\n      b.style.backgroundImage = `url(${spriteURL})`;\n      b.style.backgroundPosition = `${-c}px ${-d}px`;\n      b.style.backgroundRepeat = \"no-repeat\"\n    } else {\n      b.style.overflow = \"hidden\";\n      c = `display: block; position: relative; left: ${-c}px; top: ${-d}px`;\n      b.innerHTML = `<img style=\"${c}\" src=\"${spriteURL}\">`\n    }\n  };\n  g.changeElementBkPos = (b, c, d, f) => {\n    if (f) {\n      c = g.getCorrectedSpritePos(c);\n      d = g.getCorrectedSpritePos(d)\n    }\n    if (g.useCss) b.style.backgroundPosition = `${-c}px ${-d}px`;\n    else if (b.childNodes[0]) {\n      b.childNodes[0].style.left = `${-c}px`;\n      b.childNodes[0].style.top = `${-d}px`\n    }\n  };\n  g.determinePlayfieldDimensions = () => {\n    g.playfieldWidth = 0;\n    g.playfieldHeight = 0;\n    for (const b in n) {\n      let c = n[b];\n      if (c.w) {\n        c = c.x + c.w - 1;\n        if (c > g.playfieldWidth) g.playfieldWidth = c\n      } else {\n        c = c.y + c.h - 1;\n        if (c > g.playfieldHeight) g.playfieldHeight = c\n      }\n    }\n  };\n  g.preparePlayfield = () => {\n    g.playfield = [];\n    for (let b = 0; b <= g.playfieldHeight + 1; b++) {\n      g.playfield[b * 8] = [];\n      for (let c = -2; c <= g.playfieldWidth + 1; c++) g.playfield[b * 8][c * 8] = {\n        path: 0,\n        dot: 0,\n        intersection: 0\n      }\n    }\n  };\n  g.preparePaths = () => {\n    for (var b in n) {\n      const c = n[b];\n      const d = c.type;\n      if (c.w) {\n        for (var f = c.y * 8, h = c.x * 8; h <= (c.x + c.w - 1) * 8; h += 8) {\n          g.playfield[f][h].path = TRUE;\n          if (g.playfield[f][h].dot == 0) {\n            g.playfield[f][h].dot = 1;\n            g.dotsRemaining++\n          }\n          g.playfield[f][h].type = !d || h != c.x * 8 && h != (c.x + c.w - 1) * 8 ? d : 0\n        }\n        g.playfield[f][c.x * 8].intersection = TRUE;\n        g.playfield[f][(c.x + c.w - 1) * 8].intersection = TRUE\n      } else {\n        h = c.x * 8;\n        for (f = c.y * 8; f <= (c.y + c.h - 1) * 8; f += 8) {\n          if (g.playfield[f][h].path) g.playfield[f][h].intersection = TRUE;\n          g.playfield[f][h].path = TRUE;\n          if (g.playfield[f][h].dot == 0) {\n            g.playfield[f][h].dot = 1;\n            g.dotsRemaining++\n          }\n          g.playfield[f][h].type = !d || f != c.y * 8 && f != (c.y + c.h - 1) * 8 ? d : 0\n        }\n        g.playfield[c.y * 8][h].intersection = TRUE;\n        g.playfield[(c.y + c.h - 1) * 8][h].intersection = TRUE\n      }\n    }\n    for (b in o) if (o[b].w) for (h = o[b].x * 8; h <= (o[b].x + o[b].w - 1) * 8; h += 8) {\n      g.playfield[o[b].y * 8][h].dot = 0;\n      g.dotsRemaining--\n    } else for (f = o[b].y * 8; f <= (o[b].y + o[b].h - 1) * 8; f += 8) {\n      g.playfield[f][o[b].x * 8].dot = 0;\n      g.dotsRemaining--\n    }\n  };\n  g.prepareAllowedDirections = () => {\n    for (let b = 8; b <= g.playfieldHeight * 8; b += 8) for (let c = 8; c <= g.playfieldWidth * 8; c += 8) {\n      g.playfield[b][c].allowedDir = 0;\n      if (g.playfield[b - 8][c].path) g.playfield[b][c].allowedDir += 1;\n      if (g.playfield[b + 8][c].path) g.playfield[b][c].allowedDir += 2;\n      if (g.playfield[b][c - 8].path) g.playfield[b][c].allowedDir += 4;\n      if (g.playfield[b][c + 8].path) g.playfield[b][c].allowedDir += 8\n    }\n  };\n  g.createDotElements = () => {\n    for (let b = 8; b <= g.playfieldHeight * 8; b += 8) for (let c = 8; c <= g.playfieldWidth * 8; c += 8) if (g.playfield[b][c].dot) {\n      const d = document.createElement(\"div\");\n      d.className = \"pcm-d\";\n      d.id = g.getDotElementId(b, c);\n      d.style.left = `${c + -32}px`;\n      d.style.top = `${b + 0}px`;\n      g.playfieldEl.appendChild(d)\n    }\n  };\n  g.createEnergizerElements = () => {\n    for (const b in p) {\n      const c = p[b];\n      const d = g.getDotElementId(c.y * 8, c.x * 8);\n      document.getElementById(d).className = \"pcm-e\";\n      g.prepareElement(document.getElementById(d), 0, 144);\n      g.playfield[c.y * 8][c.x * 8].dot = 2\n    }\n  };\n  g.createFruitElement = () => {\n    g.fruitEl = document.createElement(\"div\");\n    g.fruitEl.id = \"pcm-f\";\n    g.fruitEl.style.left = `${g.getPlayfieldX(v[1])}px`;\n    g.fruitEl.style.top = `${g.getPlayfieldY(v[0])}px`;\n    g.prepareElement(g.fruitEl, -32, -16);\n    g.playfieldEl.appendChild(g.fruitEl)\n  };\n  g.createPlayfieldElements = () => {\n    g.doorEl = document.createElement(\"div\");\n    g.doorEl.id = \"pcm-do\";\n    g.doorEl.style.display = \"none\";\n    g.playfieldEl.appendChild(g.doorEl);\n    g.createDotElements();\n    g.createEnergizerElements();\n    g.createFruitElement()\n  };\n  g.createActors = () => {\n    g.actors = [];\n    for (let b = 0; b < g.playerCount; b++) {\n      g.actors[b] = new Actor(b);\n      if (b < g.playerCount) {\n        g.actors[b].ghost = FALSE;\n        g.actors[b].mode = 1\n      } else g.actors[b].ghost = TRUE\n    }\n    g.createGhost();\n  };\n  g.createGhost=()=>{\n    for (let index = 0; index < GHOST_NUMBER; index++){\n      let ghost = new Actor(index);\n      ghost.ghost = TRUE;\n      g.actors.push(ghost)\n\n    }\n  }\n  g.restartActors = () => {\n    for (const b in g.actors) g.actors[b].A()\n  };\n  g.createActorElements = () => {\n    for (const b in g.actors) g.actors[b].createElement()\n  };\n  g.createPlayfield = () => {\n    g.playfieldEl = document.createElement(\"div\");\n    g.playfieldEl.id = \"pcm-p\";\n    g.canvasEl.appendChild(g.playfieldEl)\n  };\n  g.resetPlayfield = () => {\n    g.dotsRemaining = 0;\n    g.dotsEaten = 0;\n    g.playfieldEl.innerHTML = \"\";\n    g.prepareElement(g.playfieldEl, 256, 0);\n    g.determinePlayfieldDimensions();\n    g.preparePlayfield();\n    g.preparePaths();\n    g.prepareAllowedDirections();\n    g.createPlayfieldElements();\n    g.createActorElements()\n  };\n  g.keyPressed = b => {\n    let c = FALSE;\n    switch (b) {\n      case 37:\n        g.actors[0].requestedDir = 4;\n        c = TRUE;\n        break;\n      case 38:\n        g.actors[0].requestedDir = 1;\n        c = TRUE;\n        break;\n      case 39:\n        g.actors[0].requestedDir = 8;\n        c = TRUE;\n        break;\n      case 40:\n        g.actors[0].requestedDir = 2;\n        c = TRUE;\n        break;\n      case 65:\n        if (g.playerCount == 2) {\n          g.actors[1].requestedDir = 4;\n          c = TRUE\n        }\n        break;\n      case 83:\n        if (g.playerCount == 2) {\n          g.actors[1].requestedDir = 2;\n          c = TRUE\n        }\n        break;\n      case 68:\n        if (g.playerCount == 2) {\n          g.actors[1].requestedDir = 8;\n          c = TRUE\n        }\n        break;\n      case 87:\n        if (g.playerCount == 2) {\n          g.actors[1].requestedDir = 1;\n          c = TRUE\n        }\n        break\n    }\n    return c\n  };\n  g.handleKeyDown = b => {\n    if (!b) b = window.event;\n    if (g.keyPressed(b.keyCode)) if (b.preventDefault) b.preventDefault();\n    else b.returnValue = FALSE\n  };\n  g.canvasClicked = (b, c) => {\n    let d = g.getAbsoluteElPos(g.canvasEl);\n    b -= d[1] - -32;\n    c -= d[0] - 0;\n    d = g.actors[0];\n    const f = g.getPlayfieldX(d.pos[1] + d.posDelta[1]) + 16;\n    const h = g.getPlayfieldY(d.pos[0] + d.posDelta[0]) + 32;\n    const j = Math.abs(b - f);\n    const k = Math.abs(c - h);\n    if (j > 8 && k < j) d.requestedDir = b > f ? 8 : 4;\n    else if (k > 8 && j < k) d.requestedDir = c > h ? 2 : 1\n  };\n  g.handleClick = b => {\n    if (!b) b = window.event;\n    g.canvasClicked(b.clientX, b.clientY)\n  };\n  g.registerTouch = () => {\n    document.body.addEventListener(\"touchstart\", g.handleTouchStart, TRUE);\n    g.canvasEl.addEventListener(\"touchstart\", g.handleTouchStart, TRUE);\n    document.f && document.f.q && document.f.q.addEventListener(\"touchstart\", g.handleTouchStart, TRUE)\n  };\n  g.handleTouchStart = b => {\n    g.touchDX = 0;\n    g.touchDY = 0;\n    if (b.touches.length == 1) {\n      g.touchStartX = b.touches[0].pageX;\n      g.touchStartY = b.touches[0].pageY;\n      document.body.addEventListener(\"touchmove\", g.handleTouchMove, TRUE);\n      document.body.addEventListener(\"touchend\", g.handleTouchEnd, TRUE)\n    }\n    b.preventDefault();\n    b.stopPropagation()\n  };\n  g.handleTouchMove = b => {\n    if (b.touches.length > 1) g.cancelTouch();\n    else {\n      g.touchDX = b.touches[0].pageX - g.touchStartX;\n      g.touchDY = b.touches[0].pageY - g.touchStartY\n    }\n    b.preventDefault();\n    b.stopPropagation()\n  };\n  g.handleTouchEnd = b => {\n    if (g.touchDX == 0 && g.touchDY == 0) g.canvasClicked(g.touchStartX, g.touchStartY);\n    else {\n      const c = Math.abs(g.touchDX);\n      const d = Math.abs(g.touchDY);\n      if (c < 8 && d < 8) g.canvasClicked(g.touchStartX, g.touchStartY);\n      else if (c > 15 && d < c * 2 / 3) g.actors[0].requestedDir = g.touchDX > 0 ? 8 : 4;\n      else if (d > 15 && c < d * 2 / 3) g.actors[0].requestedDir = g.touchDY > 0 ? 2 : 1\n    }\n    b.preventDefault();\n    b.stopPropagation();\n    g.cancelTouch()\n  };\n  g.cancelTouch = () => {\n    document.body.removeEventListener(\"touchmove\", g.handleTouchMove, TRUE);\n    document.body.removeEventListener(\"touchend\", g.handleTouchEnd, TRUE);\n    g.touchStartX = null;\n    g.touchStartY = null\n  };\n  g.addEventListeners = () => {\n    if (window.addEventListener) {\n      window.addEventListener(\"keydown\", g.handleKeyDown, FALSE);\n      g.canvasEl.addEventListener(\"click\", g.handleClick, FALSE);\n      g.registerTouch()\n    } else {\n      document.body.attachEvent(\"onkeydown\", g.handleKeyDown);\n      g.canvasEl.attachEvent(\"onclick\", g.handleClick)\n    }\n  };\n  g.startGameplay = () => {\n    g.score = [0, 0];\n    g.extraLifeAwarded = [FALSE, FALSE];\n    g.lives = 3;\n    g.level = 0;\n    g.paused = FALSE;\n    g.globalTime = 0;\n    g.newLevel(TRUE)\n  };\n  g.restartGameplay = b => {\n    g.seed(0);\n    g.frightModeTime = 0;\n    g.intervalTime = 0;\n    g.gameplayModeTime = 0;\n    g.fruitTime = 0;\n    g.ghostModeSwitchPos = 0;\n    g.ghostModeTime = g.levels.ghostModeSwitchTimes[0] * D;\n    g.ghostExitingPenNow = FALSE;\n    g.ghostEyesCount = 0;\n    g.tilesChanged = FALSE;\n    g.updateCruiseElroySpeed();\n    g.hideFruit();\n    g.resetForcePenLeaveTime();\n    g.restartActors();\n    g.updateActorPositions();\n    g.switchMainGhostMode(2, TRUE);\n    for (let c = g.playerCount + 1; c < g.playerCount + GHOST_NUMBER; c++) g.actors[c].a(16);\n    g.dotEatingChannel = [0, 0];\n    g.dotEatingSoundPart = [1, 1];\n    g.clearDotEatingNow();\n    b ? g.changeGameplayMode(4) : g.changeGameplayMode(6)\n  };\n  g.initiateDoubleMode = () => {\n    if (g.playerCount != 2) {\n      g.stopAllAudio();\n      g.changeGameplayMode(12)\n    }\n  };\n  g.newGame = () => {\n    g.playerCount = 1;\n    g.createChrome();\n    g.createPlayfield();\n    g.createActors();\n    // g.startGameplay()\n  };\n  g.switchToDoubleMode = () => {\n    g.playerCount = 2;\n    g.createChrome();\n    g.createPlayfield();\n    g.createActors();\n    g.startGameplay()\n  };\n  g.insertCoin = () => {\n    g.gameplayMode == 8 || g.gameplayMode == 14 ? g.newGame() : g.initiateDoubleMode()\n  };\n  g.createKillScreenElement = (b, c, d, f, h) => {\n    const j = document.createElement(\"div\");\n    j.style.left = `${b}px`;\n    j.style.top = `${c}px`;\n    j.style.width = `${d}px`;\n    j.style.height = `${f}px`;\n    j.style.zIndex = 119;\n    if (h) {\n      j.style.background = `url(${spriteURL}) -${g.killScreenTileX}px -${g.killScreenTileY}px no-repeat`;\n      g.killScreenTileY += 8\n    } else j.style.background = \"black\";\n    g.playfieldEl.appendChild(j)\n  };\n  g.killScreen = () => {\n    g.seed(0);\n    g.canvasEl.style.visibility = \"\";\n    g.createKillScreenElement(272, 0, 200, 80, FALSE);\n    g.createKillScreenElement(280, 80, 192, 56, FALSE);\n    g.killScreenTileX = 80;\n    g.killScreenTileY = 0;\n    for (let b = 280; b <= 472; b += 8) for (let c = 0; c <= 136; c += 8) {\n      if (g.rand() < 0.03) {\n        g.killScreenTileX = Math.floor(g.rand() * 25) * 10;\n        g.killScreenTileY = Math.floor(g.rand() * 2) * 10\n      }\n      g.createKillScreenElement(b, c, 8, 8, TRUE)\n    }\n    g.changeGameplayMode(14)\n  };\n  g.newLevel = b => {\n    g.level++;\n    g.levels = g.level >= z.length ? z[z.length - 1] : z[g.level];\n    // start issue 14: Ghosts stay blue permanently on restart\n    if ((g.levels.frightTime > 0) && (g.levels.frightTime <= 6))\n      g.levels.frightTime = Math.round(g.levels.frightTime * D);\n    // end issue 14\n    g.levels.frightTotalTime = g.levels.frightTime + g.timing[1] * (g.levels.frightBlinkCount * 2 - 1);\n    for (const c in g.actors) g.actors[c].dotCount = 0;\n    g.alternatePenLeavingScheme = FALSE;\n    g.lostLifeOnThisLevel = FALSE;\n    g.updateChrome();\n    g.resetPlayfield();\n    g.restartGameplay(b);\n    g.level == 256 && g.killScreen()\n  };\n  g.newLife = () => {\n    g.lostLifeOnThisLevel = TRUE;\n    g.alternatePenLeavingScheme = TRUE;\n    g.alternateDotCount = 0;\n    g.lives--;\n    g.updateChromeLives();\n    g.lives == -1 ? g.changeGameplayMode(8) : g.restartGameplay(FALSE)\n  };\n  g.switchMainGhostMode = (b, c) => {\n    if (b == 4 && g.levels.frightTime == 0) for (var d in g.actors) {\n      var f = g.actors[d];\n      if (f.ghost) f.reverseDirectionsNext = TRUE\n    } else {\n      f = g.mainGhostMode;\n      if (b == 4 && g.mainGhostMode != 4) g.lastMainGhostMode = g.mainGhostMode;\n      g.mainGhostMode = b;\n      if (b == 4 || f == 4) g.playAmbientSound();\n      switch (b) {\n        case 1:\n        case 2:\n          g.currentPlayerSpeed = g.levels.playerSpeed * 0.8;\n          g.currentDotEatingSpeed = g.levels.dotEatingSpeed * 0.8;\n          break;\n        case 4:\n          g.currentPlayerSpeed = g.levels.playerFrightSpeed * 0.8;\n          g.currentDotEatingSpeed = g.levels.dotEatingFrightSpeed * 0.8;\n          g.frightModeTime = g.levels.frightTotalTime;\n          g.modeScoreMultiplier = 1;\n          break\n      }\n      for (d in g.actors) {\n        f = g.actors[d];\n        if (f.ghost) {\n          if (b != 64 && !c) f.modeChangedWhileInPen = TRUE;\n          if (b == 4) f.eatenInThisFrightMode = FALSE;\n          if (f.mode != 8 && f.mode != 16 && f.mode != 32 && f.mode != 128 && f.mode != 64 || c) {\n            if (!c && f.mode != 4 && f.mode != b) f.reverseDirectionsNext = TRUE;\n            f.a(b)\n          }\n        } else {\n          f.fullSpeed = g.currentPlayerSpeed;\n          f.dotEatingSpeed = g.currentDotEatingSpeed;\n          f.tunnelSpeed = g.currentPlayerSpeed;\n          f.d()\n        }\n      }\n    }\n  };\n  g.figureOutPenLeaving = () => {\n    if (g.alternatePenLeavingScheme) {\n      g.alternateDotCount++;\n      switch (g.alternateDotCount) {\n        case m[1]:\n          g.actors[g.playerCount + 1].freeToLeavePen = TRUE;\n          break;\n        case m[2]:\n          g.actors[g.playerCount + 2].freeToLeavePen = TRUE;\n          break;\n        case m[3]:\n          if (g.actors[g.playerCount + 3].mode == 16) g.alternatePenLeavingScheme = FALSE;\n          break\n      }\n    } else if (g.actors[g.playerCount + 1].mode == 16 || g.actors[g.playerCount + 1].mode == 8) {\n      g.actors[g.playerCount + 1].dotCount++;\n      if (g.actors[g.playerCount + 1].dotCount >= g.levels.penLeavingLimits[1]) g.actors[g.playerCount + 1].freeToLeavePen = TRUE\n    } else if (g.actors[g.playerCount + 2].mode == 16 || g.actors[g.playerCount + 2].mode == 8) {\n      g.actors[g.playerCount + 2].dotCount++;\n      if (g.actors[g.playerCount + 2].dotCount >= g.levels.penLeavingLimits[2]) g.actors[g.playerCount + 2].freeToLeavePen = TRUE\n    } else if (g.actors[g.playerCount + 3].mode == 16 || g.actors[g.playerCount + 3].mode == 8) {\n      g.actors[g.playerCount + 3].dotCount++;\n      if (g.actors[g.playerCount + 3].dotCount >= g.levels.penLeavingLimits[3]) g.actors[g.playerCount + 3].freeToLeavePen = TRUE\n    }\n  };\n  g.resetForcePenLeaveTime = () => {\n    g.forcePenLeaveTime = g.levels.penForceTime * D\n  };\n  g.dotEaten = (b, c) => {\n    g.dotsRemaining--;\n    g.dotsEaten++;\n    g.actors[b].c(1);\n    g.playDotEatingSound(b);\n    if (g.playfield[c[0]][c[1]].dot == 2) {\n      g.switchMainGhostMode(4, FALSE);\n      g.addToScore(50, b)\n    } else g.addToScore(10, b);\n    const d = document.getElementById(g.getDotElementId(c[0], c[1]));\n    d.style.display = \"none\";\n    g.playfield[c[0]][c[1]].dot = 0;\n    g.updateCruiseElroySpeed();\n    g.resetForcePenLeaveTime();\n    //TODO\n    //g.figureOutPenLeaving();\n    if (g.dotsEaten == 70 || g.dotsEaten == 170) g.showFruit();\n    g.dotsRemaining == 0 && g.finishLevel();\n    g.playAmbientSound()\n  };\n  g.getFruitSprite = b => {\n    const c = b <= 4 ? 128 : 160;\n    b = 128 + 16 * ((b - 1) % 4);\n    return [c, b]\n  };\n  g.getFruitScoreSprite = b => {\n    const c = 128;\n    b = 16 * (b - 1);\n    return [c, b]\n  };\n  g.hideFruit = () => {\n    g.fruitShown = FALSE;\n    g.changeElementBkPos(g.fruitEl, 32, 16, TRUE)\n  };\n  g.showFruit = () => {\n    g.fruitShown = TRUE;\n    const b = g.getFruitSprite(g.levels.fruit);\n    g.changeElementBkPos(g.fruitEl, b[0], b[1], TRUE);\n    g.fruitTime = g.timing[15] + (g.timing[16] - g.timing[15]) * g.rand()\n  };\n  g.eatFruit = b => {\n    if (g.fruitShown) {\n      g.playSound(\"fruit\", 0);\n      g.fruitShown = FALSE;\n      const c = g.getFruitScoreSprite(g.levels.fruit);\n      g.changeElementBkPos(g.fruitEl, c[0], c[1], TRUE);\n      g.fruitTime = g.timing[14];\n      g.addToScore(g.levels.fruitScore, b)\n    }\n  };\n  g.updateActorTargetPositions = () => {\n    for (let b = g.playerCount; b < g.playerCount + GHOST_NUMBER; b++) g.actors[b].B()\n  };\n  g.moveActors = () => {\n    for (let b in g.actors) g.actors[b].move()\n  };\n  g.ghostDies = (b, c) => {\n    g.playSound(\"eating-ghost\", 0);\n    g.addToScore(200 * g.modeScoreMultiplier, c);\n    g.modeScoreMultiplier *= 2;\n    g.ghostBeingEatenId = b;\n    g.playerEatingGhostId = c;\n    g.changeGameplayMode(1)\n  };\n  g.playerDies = b => {\n    g.playerDyingId = b;\n    g.changeGameplayMode(2)\n  };\n  g.detectCollisions = () => {\n    g.tilesChanged = FALSE;\n    for (let b = g.playerCount; b < g.playerCount + GHOST_NUMBER; b++) for (let c = 0; c < g.playerCount; c++) if (g.actors[b].tilePos[0] == g.actors[c].tilePos[0] && g.actors[b].tilePos[1] == g.actors[c].tilePos[1]) if (g.actors[b].mode == 4) {\n      g.ghostDies(b, c);\n      return\n    } else g.actors[b].mode != 8 && g.actors[b].mode != 16 && g.actors[b].mode != 32 && g.actors[b].mode != 128 && g.actors[b].mode != 64 && g.playerDies(c)\n  };\n  g.updateCruiseElroySpeed = () => {\n    //TODO\n    /*\n    let b = g.levels.ghostSpeed * 0.8;\n    if (!g.lostLifeOnThisLevel || g.actors[g.playerCount + 3].mode != 16) {\n      const c = g.levels;\n      if (g.dotsRemaining < c.elroyDotsLeftPart2) b = c.elroySpeedPart2 * 0.8;\n      else if (g.dotsRemaining < c.elroyDotsLeftPart1) b = c.elroySpeedPart1 * 0.8\n    }\n    if (b != g.cruiseElroySpeed) {\n      g.cruiseElroySpeed = b;\n      g.actors[g.playerCount].d()\n    }\n    */\n  };\n  g.getSpeedIntervals = b => {\n    if (!g.speedIntervals[b]) {\n      let c = 0;\n      let d = 0;\n      g.speedIntervals[b] = [];\n      for (let f = 0; f < D; f++) {\n        c += b;\n        if (Math.floor(c) > d) {\n          g.speedIntervals[b].push(TRUE);\n          d = Math.floor(c)\n        } else g.speedIntervals[b].push(FALSE)\n      }\n    }\n    return g.speedIntervals[b]\n  };\n  g.finishLevel = () => {\n    g.changeGameplayMode(9)\n  };\n  g.changeGameplayMode = b => {\n    g.gameplayMode = b;\n    if (b != 13) for (let c = 0; c < g.playerCount + GHOST_NUMBER; c++) g.actors[c].b();\n    switch (b) {\n      case 0:\n        g.playAmbientSound();\n        break;\n      case 2:\n        g.stopAllAudio();\n        g.gameplayModeTime = g.timing[3];\n        break;\n      case 3:\n        g.playerDyingId == 0 ? g.playSound(\"death\", 0) : g.playSound(\"death-double\", 0);\n        g.gameplayModeTime = g.timing[4];\n        break;\n      case 6:\n        g.canvasEl.style.visibility = \"hidden\";\n        g.gameplayModeTime = g.timing[5];\n        break;\n      case 7:\n        g.stopAllAudio();\n        g.canvasEl.style.visibility = \"\";\n        g.doorEl.style.display = \"block\";\n        b = document.createElement(\"div\");\n        b.id = \"pcm-re\";\n        g.prepareElement(b, 160, 0);\n        g.playfieldEl.appendChild(b);\n        g.gameplayModeTime = g.timing[6];\n        break;\n      case 4:\n        g.doorEl.style.display = \"block\";\n        b = document.createElement(\"div\");\n        b.id = \"pcm-re\";\n        g.prepareElement(b, 160, 0);\n        g.playfieldEl.appendChild(b);\n        g.gameplayModeTime = g.timing[7];\n        g.stopAllAudio();\n        g.playerCount == 2 ? g.playSound(\"start-music-double\", 0, TRUE) : g.playSound(\"start-music\", 0, TRUE);\n        break;\n      case 5:\n        g.lives--;\n        g.updateChromeLives();\n        g.gameplayModeTime = g.timing[8];\n        break;\n      case 8:\n      case 14:\n        b = document.getElementById(\"pcm-re\");\n        google.dom.remove(b);\n        g.stopAllAudio();\n        b = document.createElement(\"div\");\n        b.id = \"pcm-go\";\n        g.prepareElement(b, 8, 152);\n        g.playfieldEl.appendChild(b);\n        g.gameplayModeTime = g.timing[9];\n        break;\n      case 9:\n        g.stopAllAudio();\n        g.gameplayModeTime = g.timing[10];\n        break;\n      case 10:\n        g.doorEl.style.display = \"none\";\n        g.gameplayModeTime = g.timing[11];\n        break;\n      case 11:\n        g.canvasEl.style.visibility = \"hidden\";\n        g.gameplayModeTime = g.timing[12];\n        break;\n      case 12:\n        g.playfieldEl.style.visibility = \"hidden\";\n        g.gameplayModeTime = g.timing[13];\n        break;\n      case 1:\n        g.gameplayModeTime =\n          g.timing[2];\n        break;\n      case 13:\n        g.startCutscene();\n        break\n    }\n  };\n  g.showChrome = b => {\n    g.showElementById(\"pcm-sc-1-l\", b);\n    g.showElementById(\"pcm-sc-2-l\", b);\n    g.showElementById(\"pcm-sc-1\", b);\n    g.showElementById(\"pcm-sc-2\", b);\n    g.showElementById(\"pcm-li\", b);\n    g.showElementById(\"pcm-so\", b)\n  };\n  g.toggleSound = b => {\n    b = window.event || b;\n    b.cancelBubble = TRUE;\n    if (google.pacManSound) {\n      g.userDisabledSound = TRUE;\n      g.stopAllAudio();\n      google.pacManSound = FALSE\n    } else {\n      google.pacManSound = TRUE;\n      g.playAmbientSound()\n    }\n    g.updateSoundIcon();\n    return b.returnValue = FALSE\n  };\n  g.updateSoundIcon = () => {\n    if (g.soundEl) google.pacManSound ? g.changeElementBkPos(g.soundEl, 216, 105, FALSE) : g.changeElementBkPos(g.soundEl, 236, 105, FALSE)\n  };\n  g.startCutscene = () => {\n    g.playfieldEl.style.visibility = \"hidden\";\n    g.canvasEl.style.visibility = \"\";\n    g.showChrome(FALSE);\n    g.cutsceneCanvasEl = document.createElement(\"div\");\n    g.cutsceneCanvasEl.id = \"pcm-cc\";\n    g.canvasEl.appendChild(g.cutsceneCanvasEl);\n    g.cutscene = B[g.cutsceneId];\n    g.cutsceneSequenceId = -1;\n    g.frightModeTime = g.levels.frightTotalTime;\n    g.cutsceneActors = [];\n    for (const b in g.cutscene.actors) {\n      let c = g.cutscene.actors[b].id;\n      if (c > 0) c += g.playerCount - 1;\n      const d = document.createElement(\"div\");\n      d.className = \"pcm-ac\";\n      d.id = `actor${c}`;\n      g.prepareElement(d, 0, 0);\n      c = new Actor(c);\n      c.el = d;\n      c.elBackgroundPos = [0, 0];\n      c.elPos = [0, 0];\n      c.pos = [g.cutscene.actors[b].y * 8, g.cutscene.actors[b].x * 8];\n      c.posDelta = [0, 0];\n      c.ghost = g.cutscene.actors[b].ghost;\n      g.cutsceneCanvasEl.appendChild(d);\n      g.cutsceneActors.push(c)\n    }\n    g.cutsceneNextSequence();\n    g.stopAllAudio();\n    g.playAmbientSound()\n  };\n  g.stopCutscene = () => {\n    g.playfieldEl.style.visibility = \"\";\n    google.dom.remove(g.cutsceneCanvasEl);\n    g.showChrome(TRUE);\n    g.newLevel(FALSE)\n  };\n  g.cutsceneNextSequence = () => {\n    g.cutsceneSequenceId++;\n    if (g.cutscene.sequence.length == g.cutsceneSequenceId) g.stopCutscene();\n    else {\n      const b = g.cutscene.sequence[g.cutsceneSequenceId];\n      g.cutsceneTime = b.time * D;\n      for (const c in g.cutsceneActors) {\n        const d = g.cutsceneActors[c];\n        d.dir = b.moves[c].dir;\n        d.speed = b.moves[c].speed;\n        if (b.moves[c].elId) d.el.id = b.moves[c].elId;\n        if (b.moves[c].mode) d.mode = b.moves[c].mode;\n        d.b()\n      }\n    }\n  };\n  g.checkCutscene = () => {\n    g.cutsceneTime <= 0 && g.cutsceneNextSequence()\n  };\n  g.advanceCutscene = () => {\n    for (const b in g.cutsceneActors) {\n      const c = g.cutsceneActors[b];\n      const d = l[c.dir];\n      c.pos[d.axis] += d.increment * c.speed;\n      c.b()\n    }\n    g.cutsceneTime--\n  };\n  g.updateActorPositions = () => {\n    for (const b in g.actors) g.actors[b].k()\n  };\n  g.blinkEnergizers = () => {\n    switch (g.gameplayMode) {\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n        g.playfieldEl.className = \"\";\n        break;\n      case 8:\n      case 14:\n        g.playfieldEl.className = \"blk\";\n        break;\n      default:\n        if (g.globalTime % (g.timing[0] * 2) == 0) g.playfieldEl.className = \"\";\n        else if (g.globalTime % (g.timing[0] * 2) == g.timing[0]) g.playfieldEl.className = \"blk\";\n        break\n    }\n  };\n  g.blinkScoreLabels = () => {\n    if (g.gameplayMode != 13) {\n      let b = \"\";\n      if (g.globalTime % (g.timing[17] * 2) == 0) b = \"visible\";\n      else if (g.globalTime % (g.timing[17] * 2) == g.timing[17]) b = \"hidden\";\n      if (b) for (let c = 0; c < g.playerCount; c++) g.scoreLabelEl[c].style.visibility = b\n    }\n  };\n  g.finishFrightMode = () => {\n    g.switchMainGhostMode(g.lastMainGhostMode, FALSE)\n  };\n  g.handleGameplayModeTimer = () => {\n    if (g.gameplayModeTime) {\n      g.gameplayModeTime--;\n      switch (g.gameplayMode) {\n        case 2:\n        case 3:\n          for (var b = 0; b < g.playerCount + GHOST_NUMBER; b++) g.actors[b].b();\n          break;\n        case 10:\n          Math.floor(g.gameplayModeTime / (g.timing[11] / 8)) % 2 == 0 ? g.changeElementBkPos(g.playfieldEl, 322, 2, FALSE) : g.changeElementBkPos(g.playfieldEl, 322, 138, FALSE)\n      }\n      if (g.gameplayModeTime <= 0) {\n        g.gameplayModeTime = 0;\n        switch (g.gameplayMode) {\n          case 1:\n            g.changeGameplayMode(0);\n            g.ghostEyesCount++;\n            g.playAmbientSound();\n            g.actors[g.ghostBeingEatenId].el.className = \"pcm-ac\";\n            g.actors[g.ghostBeingEatenId].a(8);\n            let c = FALSE;\n            for (b = g.playerCount; b < g.playerCount + GHOST_NUMBER; b++) if (g.actors[b].mode == 4 || (g.actors[b].mode == 16 || g.actors[b].mode == 128) && !g.actors[b].eatenInThisFrightMode) {\n              c = TRUE;\n              break\n            }\n            c || g.finishFrightMode();\n            break;\n          case 2:\n            g.changeGameplayMode(3);\n            break;\n          case 3:\n            g.newLife();\n            break;\n          case 4:\n            g.changeGameplayMode(5);\n            break;\n          case 6:\n            g.changeGameplayMode(7);\n            break;\n          case 7:\n          case 5:\n            b = document.getElementById(\"pcm-re\");\n            google.dom.remove(b);\n            g.changeGameplayMode(0);\n            break;\n          case 8:\n            b = document.getElementById(\"pcm-go\");\n            google.dom.remove(b);\n            google.pacManQuery && google.pacManQuery();\n            break;\n          case 9:\n            g.changeGameplayMode(10);\n            break;\n          case 10:\n            g.changeGameplayMode(11);\n            break;\n          case 11:\n            if (g.levels.cutsceneId) {\n              g.cutsceneId = g.levels.cutsceneId;\n              g.changeGameplayMode(13)\n            } else {\n              g.canvasEl.style.visibility = \"\";\n              g.newLevel(FALSE)\n            }\n            break;\n          case 12:\n            g.playfieldEl.style.visibility = \"\";\n            g.canvasEl.style.visibility = \"\";\n            g.switchToDoubleMode();\n            break\n        }\n      }\n    }\n  };\n  g.handleFruitTimer = () => {\n    if (g.fruitTime) {\n      g.fruitTime--;\n      g.fruitTime <= 0 && g.hideFruit()\n    }\n  };\n  g.handleGhostModeTimer = () => {\n    if (g.frightModeTime) {\n      g.frightModeTime--;\n      if (g.frightModeTime <= 0) {\n        g.frightModeTime = 0;\n        g.finishFrightMode()\n      }\n    } else if (g.ghostModeTime > 0) {\n      g.ghostModeTime--;\n      if (g.ghostModeTime <= 0) {\n        g.ghostModeTime = 0;\n        g.ghostModeSwitchPos++;\n        if (g.levels.ghostModeSwitchTimes[g.ghostModeSwitchPos]) {\n          g.ghostModeTime = g.levels.ghostModeSwitchTimes[g.ghostModeSwitchPos] * D;\n          switch (g.mainGhostMode) {\n            case 2:\n              g.switchMainGhostMode(1, FALSE);\n              break;\n            case 1:\n              g.switchMainGhostMode(2, FALSE);\n              break\n          }\n        }\n      }\n    }\n  };\n  g.handleForcePenLeaveTimer = () => {\n    if (g.forcePenLeaveTime) {\n      g.forcePenLeaveTime--;\n      if (g.forcePenLeaveTime <= 0) {\n        for (let b = 1; b <= 3; b++) if (g.actors[g.playerCount + b].mode == 16) {\n          g.actors[g.playerCount + b].freeToLeavePen = TRUE;\n          break\n        }\n        g.resetForcePenLeaveTime()\n      }\n    }\n  };\n  g.handleTimers = () => {\n    if (g.gameplayMode == 0) {\n      g.handleForcePenLeaveTimer();\n      g.handleFruitTimer();\n      g.handleGhostModeTimer()\n    }\n    g.handleGameplayModeTimer()\n  };\n  //TODO\n   g.tick = () => {\n    let b = (new Date).getTime();\n    g.lastTimeDelta += b - g.lastTime - g.tickInterval;\n    if (g.lastTimeDelta > 100) g.lastTimeDelta = 100;\n    if (g.canDecreaseFps && g.lastTimeDelta > 50) {\n      g.lastTimeSlownessCount++;\n      g.lastTimeSlownessCount == 20 && g.decreaseFps()\n    }\n    let c = 0;\n    if (g.lastTimeDelta > g.tickInterval) {\n      c = Math.floor(g.lastTimeDelta / g.tickInterval);\n      g.lastTimeDelta -= g.tickInterval * c\n    }\n    g.lastTime = b;\n    if (g.gameplayMode == 13) {\n      for (b = 0; b < g.tickMultiplier + c; b++) {\n        g.advanceCutscene();\n        g.intervalTime = (g.intervalTime + 1) % D;\n        g.globalTime++\n      }\n      g.checkCutscene();\n      g.blinkScoreLabels()\n    } else for (b = 0; b < g.tickMultiplier + c; b++) {\n      g.moveActors();\n      if (g.gameplayMode == 0) if (g.tilesChanged) {\n        g.detectCollisions();\n        g.updateActorTargetPositions()\n      }\n      g.globalTime++;\n      g.intervalTime = (g.intervalTime + 1) % D;\n      g.blinkEnergizers();\n      g.blinkScoreLabels();\n      g.handleTimers()\n    }\n  }; \n  g.extraLife = b => {\n    g.playSound(\"extra-life\", 0);\n    g.extraLifeAwarded[b] = TRUE;\n    g.lives++;\n    if (g.lives > 5) g.lives = 5;\n    g.updateChromeLives()\n  };\n  g.addToScore = (b, c) => {\n    g.score[c] += b;\n    !g.extraLifeAwarded[c] && g.score[c] > 1E4 && g.extraLife(c);\n    g.updateChromeScore(c)\n  };\n  g.updateChrome = () => {\n    g.updateChromeLevel();\n    g.updateChromeLives();\n    for (let b = 0; b < g.playerCount; b++) g.updateChromeScore(b)\n  };\n  g.updateChromeScore = b => {\n    let c = g.score[b].toString();\n    if (c.length > g.scoreDigits) c = c.substr(c.length - g.scoreDigits, g.scoreDigits);\n    for (let d = 0; d < g.scoreDigits; d++) {\n      const f = document.getElementById(`pcm-sc-${b + 1}-${d}`);\n      const h = c.substr(d, 1);\n      h ? g.changeElementBkPos(f, 8 + 8 * parseInt(h, 10), 144, TRUE) : g.changeElementBkPos(f, 48, 0, TRUE)\n    }\n  };\n  g.updateChromeLives = () => {\n    g.livesEl.innerHTML = \"\";\n    for (let b = 0; b < g.lives; b++) {\n      const c = document.createElement(\"div\");\n      c.className = \"pcm-lif\";\n      g.prepareElement(c, 64, 129);\n      g.livesEl.appendChild(c)\n    }\n  };\n  g.updateChromeLevel = () => {\n    g.levelEl.innerHTML = \"\";\n    for (let b = g.level; b >= Math.max(g.level - 4 + 1, 1); b--) {\n      let c = b >= z.length ? z[z.length - 1].fruit : z[b].fruit;\n      const d = document.createElement(\"div\");\n      c = g.getFruitSprite(c);\n      g.prepareElement(d, c[0], c[1]);\n      g.levelEl.appendChild(d)\n    }\n    g.levelEl.style.marginTop = `${(4 - Math.min(g.level, 4)) * 16}px`\n  };\n  g.createChrome = () => {\n    g.canvasEl.innerHTML = \"\";\n    g.scoreDigits = g.playerCount == 1 ? 10 : 5;\n    g.scoreLabelEl = [];\n    g.scoreLabelEl[0] = document.createElement(\"div\");\n    g.scoreLabelEl[0].id = \"pcm-sc-1-l\";\n    g.prepareElement(g.scoreLabelEl[0], 160, 56);\n    g.canvasEl.appendChild(g.scoreLabelEl[0]);\n    g.scoreEl = [];\n    g.scoreEl[0] = document.createElement(\"div\");\n    g.scoreEl[0].id = \"pcm-sc-1\";\n    for (var b = 0; b < g.scoreDigits; b++) {\n      var c = document.createElement(\"div\");\n      c.id = `pcm-sc-1-${b}`;\n      c.style.top = `${b * 8}px`;\n      c.style.left = 0;\n      c.style.position = \"absolute\";\n      c.style.width = \"8px\";\n      c.style.height = \"8px\";\n      g.prepareElement(c, 48, 0);\n      g.scoreEl[0].appendChild(c)\n    }\n    g.canvasEl.appendChild(g.scoreEl[0]);\n    g.livesEl = document.createElement(\"div\");\n    g.livesEl.id = \"pcm-li\";\n    g.canvasEl.appendChild(g.livesEl);\n    g.levelEl = document.createElement(\"div\");\n    g.levelEl.id = \"pcm-le\";\n    g.canvasEl.appendChild(g.levelEl);\n    if (g.playerCount == 2) {\n      g.scoreLabelEl[1] = document.createElement(\"div\");\n      g.scoreLabelEl[1].id = \"pcm-sc-2-l\";\n      g.prepareElement(g.scoreLabelEl[1], 160, 64);\n      g.canvasEl.appendChild(g.scoreLabelEl[1]);\n      g.scoreEl[1] = document.createElement(\"div\");\n      g.scoreEl[1].id = \"pcm-sc-2\";\n      for (b = 0; b < g.scoreDigits; b++) {\n        c = document.createElement(\"div\");\n        c.id = `pcm-sc-2-${b}`;\n        c.style.top = `${b * 8}px`;\n        c.style.left = 0;\n        c.style.position = \"absolute\";\n        c.style.width = \"8px\";\n        c.style.height = \"8px\";\n        g.prepareElement(c, 48, 0);\n        g.scoreEl[1].appendChild(c)\n      }\n      g.canvasEl.appendChild(g.scoreEl[1])\n    }\n    if (g.soundAvailable) {\n      g.soundEl = document.createElement(\"div\");\n      g.soundEl.id = \"pcm-so\";\n      g.prepareElement(g.soundEl, -32, -16);\n      g.canvasEl.appendChild(g.soundEl);\n      g.soundEl.onclick =\n        g.toggleSound;\n      g.updateSoundIcon()\n    }\n  };\n  g.clearDotEatingNow = () => {\n    g.dotEatingNow = [FALSE, FALSE];\n    g.dotEatingNext = [FALSE, FALSE]\n  };\n  g.playSound = (b, c, d) => {\n    if (!(!g.soundAvailable || !google.pacManSound || g.paused)) {\n      d || g.stopSoundChannel(c);\n      try {\n        g.flashSoundPlayer.playTrack(b, c)\n      } catch (f) {\n        g.soundAvailable = FALSE\n      }\n    }\n  };\n  g.stopSoundChannel = b => {\n    if (g.soundAvailable) try {\n      g.flashSoundPlayer.stopChannel(b)\n    } catch (c) {\n      g.soundAvailable = FALSE\n    }\n  };\n  g.stopAllAudio = () => {\n    if (g.soundAvailable) {\n      try {\n        g.flashSoundPlayer.stopAmbientTrack()\n      } catch (b) {\n        g.soundAvailable = FALSE\n      }\n      for (let c = 0; c < 5; c++) g.stopSoundChannel(c)\n    }\n  };\n  g.playDotEatingSound = b => {\n    if (g.soundAvailable && google.pacManSound) if (g.gameplayMode == 0) if (g.dotEatingNow[b]) g.dotEatingNext[b] = TRUE;\n    else {\n      if (b == 0) {\n        const c = g.dotEatingSoundPart[b] == 1 ? \"eating-dot-1\" : \"eating-dot-2\";\n        g.playSound(c, 1 + g.dotEatingChannel[b], TRUE);\n        g.dotTimer = window.setInterval(g.repeatDotEatingSoundPacMan, 150)\n      } else {\n        g.playSound(\"eating-dot-double\", 3 + g.dotEatingChannel[b], TRUE);\n        g.dotTimerMs = window.setInterval(g.repeatDotEatingSoundMsPacMan, 150)\n      }\n      g.dotEatingChannel[b] = (g.dotEatingChannel[b] + 1) % 2;\n      g.dotEatingSoundPart[b] =\n        3 - g.dotEatingSoundPart[b]\n    }\n  };\n  g.repeatDotEatingSound = b => {\n    g.dotEatingNow[b] = FALSE;\n    if (g.dotEatingNext[b]) {\n      g.dotEatingNext[b] = FALSE;\n      g.playDotEatingSound(b)\n    }\n  };\n  g.repeatDotEatingSoundPacMan = () => {\n    g.repeatDotEatingSound(0)\n  };\n  g.repeatDotEatingSoundMsPacMan = () => {\n    g.repeatDotEatingSound(1)\n  };\n  g.playAmbientSound = () => {\n    if (g.soundAvailable && google.pacManSound) {\n      let b = 0;\n      if (g.gameplayMode == 0 || g.gameplayMode == 1) b = g.ghostEyesCount ? \"ambient-eyes\" : g.mainGhostMode == 4 ? \"ambient-fright\" : g.dotsEaten > 241 ? \"ambient-4\" : g.dotsEaten > 207 ? \"ambient-3\" : g.dotsEaten > 138 ? \"ambient-2\" : \"ambient-1\";\n      else if (g.gameplayMode == 13) b = \"cutscene\";\n      if (b) try {\n        g.flashSoundPlayer.playAmbientTrack(b)\n      } catch (c) {\n        g.soundAvailable = FALSE\n      }\n    }\n  };\n  g.initializeTickTimer = () => {\n    window.clearInterval(g.tickTimer);\n    g.fpsChoice = 2;\n    g.fps = C[g.fpsChoice];\n    g.tickInterval = 1E3 / g.fps;\n    g.tickMultiplier = D / g.fps;\n    g.timing = {};\n    for (const b in w) {\n      const c = !google.pacManSound && (b == 7 || b == 8) ? 1 : w[b];\n      g.timing[b] = Math.round(c * D)\n    }\n    g.lastTime = (new Date).getTime();\n    g.lastTimeDelta = 0;\n    g.lastTimeSlownessCount = 0;\n    g.tickTimer = window.setInterval(g.tick, g.tickInterval)\n  };\n  g.decreaseFps = () => {\n    if (g.fpsChoice < C.length - 1) {\n      g.fpsChoice++;\n      g.initializeTickTimer();\n      if (g.fpsChoice == C.length - 1) g.canDecreaseFps = FALSE\n    }\n  };\n  g.addCss = () => {\n    const b = \"#pcm-c {  width: 554px;  border-top: 25px solid black;  padding-bottom: 25px;  height: 136px;  position: relative; outline: 0;  overflow: hidden;  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);}#pcm-c * {  position: absolute;  overflow: hidden;}#pcm-p,#pcm-cc {  left: 45px;  width: 464px;  height: 136px;  z-index: 99;  overflow: hidden;}#pcm-p .pcm-d {  width: 2px;  height: 2px;  margin-left: 3px;  margin-top: 3px;  background: #f8b090;  z-index: 100;}#pcm-p .pcm-e {  width: 8px;  height: 8px;  z-index: 101;}#pcm-sc-1 {  left: 18px;  top: 16px;  width: 8px;  height: 56px;  position: absolute;  overflow: hidden;}#pcm-sc-2 {  left: 18px;  top: 80px;  width: 8px;  height: 56px;  position: absolute;  overflow: hidden;}#pcm-le {  position: absolute;  left: 515px;  top: 74px;  height: 64px;  width: 32px;} #pcm-le div {  position: relative;}#pcm-sc-1-l {    left: -2px;  top: 0;  width: 48px;  height: 8px;}#pcm-sc-2-l {    left: -2px;  top: 64px;  width: 48px;  height: 8px;}#pcm-so {  left: 7px;  top: 116px;  width: 12px;  height: 12px;  border: 8px solid black;  cursor: pointer;}#pcm-li {  position: absolute;  left: 523px;  top: 0;  height: 80px;  width: 16px;}#pcm-li .pcm-lif {  position: relative;  width: 16px;  height: 12px;  margin-bottom: 3px;}#pcm-p.blk .pcm-e {  visibility: hidden;}#pcm-c .pcm-ac {  width: 16px;  height: 16px;  margin-left: -4px;  margin-top: -4px;  z-index: 110;}#pcm-c .pcm-n {  z-index: 111;}#pcm-c #pcm-stck {  z-index: 109;}#pcm-c #pcm-gbug {  width: 32px;}#pcm-c #pcm-bpcm {  width: 32px;  height: 32px;  margin-left: -20px;  margin-top: -20px;}#pcm-f,#pcm-le div {  width: 32px;  height: 16px;  z-index: 105;}#pcm-f {  margin-left: -8px;  margin-top: -4px;}#pcm-do {  width: 19px;  height: 2px;  left: 279px;  top: 46px;  overflow: hidden;  position: absolute;  background: #ffaaa5;}#pcm-re {  width: 48px;  height: 8px;  z-index: 120;  left: 264px;  top: 80px;}#pcm-go {  width: 80px;  height: 8px;  z-index: 120;  left: 248px;  top: 80px;}\";\n    g.styleElement =\n      document.createElement(\"style\");\n    g.styleElement.type = \"text/css\";\n    if (g.styleElement.styleSheet) g.styleElement.styleSheet.cssText = b;\n    else g.styleElement.appendChild(document.createTextNode(b));\n    document.getElementsByTagName(\"head\")[0].appendChild(g.styleElement)\n  };\n  g.createCanvasElement = () => {\n    g.canvasEl = document.createElement(\"div\");\n    g.canvasEl.id = \"pcm-c\";\n    g.canvasEl.hideFocus = TRUE;\n    document.getElementById(\"logo\").appendChild(g.canvasEl);\n    g.canvasEl.tabIndex = 0;\n    g.canvasEl.focus()\n  };\n  g.everythingIsReady = () => {\n    if (!g.ready) {\n      g.ready = TRUE;\n      const b = document.getElementById(\"logo-l\");\n      google.dom.remove(b);\n      //document.getElementById(\"logo\").style.background = \"black\";\n      g.addCss();\n      g.createCanvasElement();\n      g.speedIntervals = [];\n      g.oppositeDirections = [];\n      g.oppositeDirections[1] = 2;\n      g.oppositeDirections[2] = 1;\n      g.oppositeDirections[4] = 8;\n      g.oppositeDirections[8] = 4;\n      g.addEventListeners();\n      g.fpsChoice = 0;\n      g.canDecreaseFps = TRUE;\n      g.initializeTickTimer();\n      g.newGame()\n    }\n  };\n  g.checkIfEverythingIsReady = () => {\n    if (g.soundReady || g.graphicsReady) g.updateLoadingProgress(0.67);\n    if (g.soundReady && g.graphicsReady) {\n      g.updateLoadingProgress(1);\n      g.everythingIsReady()\n    }\n  };\n  g.preloadImage = b => {\n    const c = new Image;\n    const d = google.browser.engine.IE;\n    if (!d) c.onload = g.imageLoaded;\n    c.src = b;\n    d && g.imageLoaded()\n  };\n  g.imageLoaded = () => {\n    g.graphicsReady = TRUE;\n    g.checkIfEverythingIsReady()\n  };\n  g.prepareGraphics = () => {\n    g.graphicsReady = FALSE;\n    g.preloadImage(spriteURL)\n  };\n  g.trimString = b => b.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\");\n  g.g = (b, c) => {\n    if (b < c) return -1;\n    else if (b > c) return 1;\n    return 0\n  };\n  g.compareVersions = (b, c) => {\n    for (var d = 0, f = g.trimString(String(b)).split(\".\"), h = g.trimString(String(c)).split(\".\"), j = Math.max(f.length, h.length), k = 0; d == 0 && k < j; k++) {\n      const x = f[k] || \"\";\n      const F = h[k] || \"\";\n      const G = new RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\n      const H = new RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\n      do {\n        const t = G.exec(x) || [\"\", \"\", \"\"];\n        const u = H.exec(F) || [\"\", \"\", \"\"];\n        if (t[0].length == 0 && u[0].length == 0) break;\n        d = t[1].length == 0 ? 0 : parseInt(t[1], 10);\n        const I = u[1].length == 0 ? 0 : parseInt(u[1], 10);\n        d = g.g(d, I) || g.g(t[2].length == 0, u[2].length == 0) || g.g(t[2], u[2])\n      } while (d == 0)\n    }\n    return d\n  };\n  g.getFlashVersion = b => {\n    b = b.match(/[\\d]+/g);\n    b.length = 3;\n    return b.join(\".\")\n  };\n  g.detectFlash = () => {\n    let b = FALSE;\n    let c = \"\";\n    if (navigator.plugins && navigator.plugins.length) {\n      var d = navigator.plugins[\"Shockwave Flash\"];\n      if (d) {\n        b = TRUE;\n        if (d.description) c = g.getFlashVersion(d.description)\n      }\n      if (navigator.plugins[\"Shockwave Flash 2.0\"]) {\n        b = TRUE;\n        c = \"2.0.0.11\"\n      }\n    } else if (navigator.mimeTypes && navigator.mimeTypes.length) {\n      if (b = (d = navigator.mimeTypes[\"application/x-shockwave-flash\"]) && d.enabledPlugin) {\n        c = d.enabledPlugin.description;\n        c = g.getFlashVersion(c)\n      }\n    } else try {\n      d = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash.7\");\n      b = TRUE;\n      c = g.getFlashVersion(d.GetVariable(\"$version\"))\n    } catch (f) {\n      try {\n        d = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash.6\");\n        b = TRUE;\n        c = \"6.0.21\"\n      } catch (h) {\n        try {\n          d = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n          b = TRUE;\n          c = g.getFlashVersion(d.GetVariable(\"$version\"))\n        } catch (j) { }\n      }\n    }\n    g.hasFlash = b;\n    g.flashVersion = c\n  };\n  g.isFlashVersion = b => g.compareVersions(g.flashVersion, b) >= 0;\n  g.prepareSound = () => {\n    g.soundAvailable = FALSE;\n    g.soundReady = FALSE;\n    g.detectFlash();\n    if (!g.hasFlash || !g.isFlashVersion(\"9.0.0.0\")) {\n      g.soundReady = TRUE;\n      g.checkIfEverythingIsReady()\n    } else {\n      g.flashIframe = document.createElement(\"iframe\");\n      g.flashIframe.name = \"pm-sound\";\n      g.flashIframe.style.position = \"absolute\";\n      g.flashIframe.style.top = \"-150px\";\n      g.flashIframe.style.border = 0;\n      g.flashIframe.style.width = \"100px\";\n      g.flashIframe.style.height = \"100px\";\n      google.dom.append(g.flashIframe);\n      g.flashIframeDoc = g.flashIframe.contentDocument;\n      if (g.flashIframeDoc == undefined || g.flashIframeDoc == null) g.flashIframeDoc = g.flashIframe.contentWindow.document;\n      g.flashIframeDoc.open();\n      g.flashIframeDoc.write('<html><head></head><body><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0\" width=\"0\" height=\"0\" id=\"pacman-sound-player\" type=\"application/x-shockwave-flash\"> <param name=\"movie\" value=\"src/swf/pacman10-hp-sound.swf\"> <param name=\"allowScriptAccess\" value=\"always\"> <object id=\"pacman-sound-player-2\"  type=\"application/x-shockwave-flash\" data=\"src/swf/pacman10-hp-sound.swf\" width=\"0\" height=\"0\"><param name=\"allowScriptAccess\" value=\"always\"> </object></object></body></html>');\n      g.flashIframeDoc.close();\n      window.setTimeout(g.flashNotReady, 3E3)\n    }\n  };\n  g.flashNotReady = () => {\n    if (!g.ready) {\n      g.soundAvailable = FALSE;\n      g.soundReady = TRUE;\n      g.checkIfEverythingIsReady()\n    }\n  };\n  g.flashReady = b => {\n    g.flashSoundPlayer = b;\n    g.soundAvailable = TRUE;\n    g.soundReady = TRUE;\n    g.checkIfEverythingIsReady()\n  };\n  g.flashLoaded = () => {\n    if (g.flashIframeDoc) {\n      let b = g.flashIframeDoc.getElementById(\"pacman-sound-player\");\n      if (b && b.playTrack) {\n        g.flashReady(b);\n        return\n      } else if ((b = g.flashIframeDoc.getElementById(\"pacman-sound-player-2\")) && b.playTrack) {\n        g.flashReady(b);\n        return\n      }\n    }\n    g.flashNotReady()\n  };\n  g.destroy = () => {\n    if (google.pacman) {\n      g.stopAllAudio();\n      window.clearInterval(g.tickTimer);\n      window.clearInterval(g.dotTimer);\n      window.clearInterval(g.dotTimerMs);\n      google.dom.remove(g.styleElement);\n      google.dom.remove(g.flashIframe);\n      google.dom.remove(g.canvasEl);\n      google.pacman = undefined\n    }\n  };\n  g.exportFunctionCalls = () => {\n    google.pacman = {};\n    google.pacman.insertCoin = g.insertCoin;\n    google.pacman.startGameplay = g.startGameplay;\n    google.pacman.flashLoaded = g.flashLoaded;\n    google.pacman.destroy = g.destroy\n    google.pacman.keyPressed = g.keyPressed;\n    google.pacman.switchToDoubleMode = g.switchToDoubleMode\n  };\n  g.updateLoadingProgress = b => {\n    b = Math.round(b * 200);\n    document.getElementById(\"logo-b\").style.width = `${b}px`\n  };\n  g.init = () => {\n    g.ready = FALSE;\n    document.getElementById(\"logo\").title = \"\";\n    g.updateLoadingProgress(0.33);\n    g.exportFunctionCalls();\n    g.useCss = navigator.userAgent.includes(\"MSIE 5.\") || navigator.userAgent.includes(\"MSIE 6.\") || navigator.userAgent.includes(\"MSIE 7.\") ? FALSE : TRUE;\n    g.prepareGraphics();\n    g.prepareSound()\n  };\n  g.init();\n  return g;\n})();\n\n\n\nconst CONTROL_CODES = {\n  1: {\n      up: 38,\n      down: 40,\n      left: 37,\n      right: 39\n  },\n  2: {\n      up: 87,\n      down: 83,\n      left: 65,\n      right: 68\n  }\n}\nclass Pacman{\n  constructor(googlePacman){\n    this.googlePacman = googlePacman;\n  }\n  startGameplayNoGhost(){\n    GHOST_NUMBER = 0;\n    this.googlePacman.switchToDoubleMode();\n\n  }\n  startGameplayWithGhost(){\n    GHOST_NUMBER = 2;\n    \n    this.googlePacman.switchToDoubleMode();\n\n  }\n  move(playerId,direction){    \n    this.googlePacman.keyPressed(CONTROL_CODES[playerId][direction]);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new Pacman(googlePacman));\n\n//# sourceURL=webpack:///./pacman-server/src/pacman.js?");

/***/ }),

/***/ "./pacman-server/src/pacnmanv2.js":
/*!****************************************!*\
  !*** ./pacman-server/src/pacnmanv2.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pacnmanv2User__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pacnmanv2User */ \"./pacman-server/src/pacnmanv2User.js\");\n/* harmony import */ var _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pacnmanv2Const */ \"./pacman-server/src/pacnmanv2Const.js\");\n\n\n\n_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS = 30;\n\n_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].Ghost = function (game, map, colour) {\n\n    var position  = null,\n        direction = null,\n        eatable   = null,\n        eaten     = null,\n        due       = null;\n    \n    function getNewCoord(dir, current) { \n        \n        var speed  = isVunerable() ? 1 : isHidden() ? 4 : 2,\n            xSpeed = (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"] && -speed || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"] && speed || 0),\n            ySpeed = (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DOWN\"] && speed || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"UP\"] && -speed || 0);\n    \n        return {\n            \"x\": addBounded(current.x, xSpeed),\n            \"y\": addBounded(current.y, ySpeed)\n        };\n    };\n\n    /* Collision detection(walls) is done when a ghost lands on an\n     * exact block, make sure they dont skip over it \n     */\n    function addBounded(x1, x2) { \n        var rem    = x1 % 10, \n            result = rem + x2;\n        if (rem !== 0 && result > 10) {\n            return x1 + (10 - rem);\n        } else if(rem > 0 && result < 0) { \n            return x1 - rem;\n        }\n        return x1 + x2;\n    };\n    \n    function isVunerable() { \n        return eatable !== null;\n    };\n    \n    function isDangerous() {\n        return eaten === null;\n    };\n\n    function isHidden() { \n        return eatable === null && eaten !== null;\n    };\n    \n    function getRandomDirection() {\n        var moves = (direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"] || direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"]) \n            ? [_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"UP\"], _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DOWN\"]] : [_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"], _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"]];\n        return moves[Math.floor(Math.random() * 2)];\n    };\n    \n    function reset() {\n        eaten = null;\n        eatable = null;\n        position = {\"x\": 90, \"y\": 80};\n        direction = getRandomDirection();\n        due = getRandomDirection();\n    };\n    \n    function onWholeSquare(x) {\n        return x % 10 === 0;\n    };\n    \n    function oppositeDirection(dir) { \n        return dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"] && _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"] ||\n            dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"] && _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"] ||\n            dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"UP\"] && _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DOWN\"] || _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"UP\"];\n    };\n\n    function makeEatable() {\n        direction = oppositeDirection(direction);\n        eatable = game.getTick();\n    };\n\n    function eat() { \n        eatable = null;\n        eaten = game.getTick();\n    };\n\n    function pointToCoord(x) {\n        return Math.round(x / 10);\n    };\n\n    function nextSquare(x, dir) {\n        var rem = x % 10;\n        if (rem === 0) { \n            return x; \n        } else if (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"] || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DOWN\"]) { \n            return x + (10 - rem);\n        } else {\n            return x - rem;\n        }\n    };\n\n    function onGridSquare(pos) {\n        return onWholeSquare(pos.y) && onWholeSquare(pos.x);\n    };\n\n    function secondsAgo(tick) { \n        return (game.getTick() - tick) / _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS;\n    };\n\n    function getColour() { \n        if (eatable) { \n            if (secondsAgo(eatable) > 5) { \n                return game.getTick() % 20 > 10 ? \"#FFFFFF\" : \"#0000BB\";\n            } else { \n                return \"#0000BB\";\n            }\n        } else if(eaten) { \n            return \"#222\";\n        } \n        return colour;\n    };\n\n    function draw(ctx) {\n  \n        var s    = map.blockSize, \n            top  = (position.y/10) * s,\n            left = (position.x/10) * s;\n    \n        if (eatable && secondsAgo(eatable) > 8) {\n            eatable = null;\n        }\n        \n        if (eaten && secondsAgo(eaten) > 3) { \n            eaten = null;\n        }\n        \n        var tl = left + s;\n        var base = top + s - 3;\n        var inc = s / 10;\n\n        var high = game.getTick() % 10 > 5 ? 3  : -3;\n        var low  = game.getTick() % 10 > 5 ? -3 : 3;\n\n        ctx.fillStyle = getColour();\n        ctx.beginPath();\n\n        ctx.moveTo(left, base);\n\n        ctx.quadraticCurveTo(left, top, left + (s/2),  top);\n        ctx.quadraticCurveTo(left + s, top, left+s,  base);\n        \n        // Wavy things at the bottom\n        ctx.quadraticCurveTo(tl-(inc*1), base+high, tl - (inc * 2),  base);\n        ctx.quadraticCurveTo(tl-(inc*3), base+low, tl - (inc * 4),  base);\n        ctx.quadraticCurveTo(tl-(inc*5), base+high, tl - (inc * 6),  base);\n        ctx.quadraticCurveTo(tl-(inc*7), base+low, tl - (inc * 8),  base); \n        ctx.quadraticCurveTo(tl-(inc*9), base+high, tl - (inc * 10), base); \n\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.fillStyle = \"#FFF\";\n        ctx.arc(left + 6,top + 6, s / 6, 0, 300, false);\n        ctx.arc((left + s) - 6,top + 6, s / 6, 0, 300, false);\n        ctx.closePath();\n        ctx.fill();\n\n        var f = s / 12;\n        var off = {};\n        off[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"]] = [f, 0];\n        off[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"]]  = [-f, 0];\n        off[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"UP\"]]    = [0, -f];\n        off[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DOWN\"]]  = [0, f];\n\n        ctx.beginPath();\n        ctx.fillStyle = \"#000\";\n        ctx.arc(left+6+off[direction][0], top+6+off[direction][1], \n                s / 15, 0, 300, false);\n        ctx.arc((left+s)-6+off[direction][0], top+6+off[direction][1], \n                s / 15, 0, 300, false);\n        ctx.closePath();\n        ctx.fill();\n\n    };\n\n    function pane(pos) {\n\n        if (pos.y === 100 && pos.x >= 190 && direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"]) {\n            return {\"y\": 100, \"x\": -10};\n        }\n        \n        if (pos.y === 100 && pos.x <= -10 && direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"]) {\n            return position = {\"y\": 100, \"x\": 190};\n        }\n\n        return false;\n    };\n    \n    function move(ctx) {\n        \n        var oldPos = position,\n            onGrid = onGridSquare(position),\n            npos   = null;\n        \n        if (due !== direction) {\n            \n            npos = getNewCoord(due, position);\n            \n            if (onGrid &&\n                map.isFloorSpace({\n                    \"y\":pointToCoord(nextSquare(npos.y, due)),\n                    \"x\":pointToCoord(nextSquare(npos.x, due))})) {\n                direction = due;\n            } else {\n                npos = null;\n            }\n        }\n        \n        if (npos === null) {\n            npos = getNewCoord(direction, position);\n        }\n        \n        if (onGrid &&\n            map.isWallSpace({\n                \"y\" : pointToCoord(nextSquare(npos.y, direction)),\n                \"x\" : pointToCoord(nextSquare(npos.x, direction))\n            })) {\n            \n            due = getRandomDirection();            \n            return move(ctx);\n        }\n\n        position = npos;        \n        \n        var tmp = pane(position);\n        if (tmp) { \n            position = tmp;\n        }\n        \n        due = getRandomDirection();\n        \n        return {\n            \"new\" : position,\n            \"old\" : oldPos\n        };\n    };\n    \n    return {\n        \"eat\"         : eat,\n        \"isVunerable\" : isVunerable,\n        \"isDangerous\" : isDangerous,\n        \"makeEatable\" : makeEatable,\n        \"reset\"       : reset,\n        \"move\"        : move,\n        \"draw\"        : draw\n    };\n};\n\n\n_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].Map = function (size) {\n    \n    var height    = null, \n        width     = null, \n        blockSize = size,\n        pillSize  = 0,\n        map       = null;\n    \n    function withinBounds(y, x) {\n        return y >= 0 && y < height && x >= 0 && x < width;\n    }\n    \n    function isWall(pos) {\n        return withinBounds(pos.y, pos.x) && map[pos.y][pos.x] === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].WALL;\n    }\n    \n    function isFloorSpace(pos) {\n        if (!withinBounds(pos.y, pos.x)) {\n            return false;\n        }\n        var peice = map[pos.y][pos.x];\n        return peice === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].EMPTY || \n            peice === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].BISCUIT ||\n            peice === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].PILL;\n    }\n    \n    function drawWall(ctx) {\n\n        var i, j, p, line;\n        \n        ctx.strokeStyle = \"#0000FF\";\n        ctx.lineWidth   = 5;\n        ctx.lineCap     = \"round\";\n        \n        for (let i = 0; i < _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].WALLS.length; i += 1) {\n            line = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].WALLS[i];\n            ctx.beginPath();\n\n            for (j = 0; j < line.length; j += 1) {\n\n                p = line[j];\n                \n                if (p.move) {\n                    ctx.moveTo(p.move[0] * blockSize, p.move[1] * blockSize);\n                } else if (p.line) {\n                    ctx.lineTo(p.line[0] * blockSize, p.line[1] * blockSize);\n                } else if (p.curve) {\n                    ctx.quadraticCurveTo(p.curve[0] * blockSize, \n                                         p.curve[1] * blockSize,\n                                         p.curve[2] * blockSize, \n                                         p.curve[3] * blockSize);   \n                }\n            }\n            ctx.stroke();\n        }\n    }\n    function clone (object) {\n        var i, newObj = (object instanceof Array) ? [] : {};\n        for (let i in object) {\n            if (i === 'clone') {\n                continue;\n            }\n            if (object[i] && typeof object[i] === \"object\") {\n                newObj[i] = clone(object[i]);\n            } else {\n                newObj[i] = object[i];\n            }\n        }\n        return newObj;\n    };\n    function reset() {       \n        map    = clone(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].MAP);\n        height = map.length;\n        width  = map[0].length;        \n    };\n\n    function block(pos) {\n        return map[pos.y][pos.x];\n    };\n    \n    function setBlock(pos, type) {\n        map[pos.y][pos.x] = type;\n    };\n\n    function drawPills(ctx) { \n\n        if (++pillSize > 30) {\n            pillSize = 0;\n        }\n        \n        for (let i = 0; i < height; i += 1) {\n\t\t    for (let j = 0; j < width; j += 1) {\n                if (map[i][j] === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].PILL) {\n                    ctx.beginPath();\n\n                    ctx.fillStyle = \"#000\";\n\t\t            ctx.fillRect((j * blockSize), (i * blockSize), \n                                 blockSize, blockSize);\n\n                    ctx.fillStyle = \"#FFF\";\n                    ctx.arc((j * blockSize) + blockSize / 2,\n                            (i * blockSize) + blockSize / 2,\n                            Math.abs(5 - (pillSize/3)), \n                            0, \n                            Math.PI * 2, false); \n                    ctx.fill();\n                    ctx.closePath();\n                }\n\t\t    }\n\t    }\n    };\n    \n    function draw(ctx) {\n        \n        var i, j, size = blockSize;\n\n        ctx.fillStyle = \"#000\";\n\t    ctx.fillRect(0, 0, width * size, height * size);\n\n        drawWall(ctx);\n        \n        for (let i = 0; i < height; i += 1) {\n\t\t    for (j = 0; j < width; j += 1) {\n\t\t\t    drawBlock(i, j, ctx);\n\t\t    }\n\t    }\n    };\n    \n    function drawBlock(y, x, ctx) {\n\n        var layout = map[y][x];\n\n        if (layout === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].PILL) {\n            return;\n        }\n\n        ctx.beginPath();\n        \n        if (layout === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].EMPTY || layout === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].BLOCK || \n            layout === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].BISCUIT) {\n            \n            ctx.fillStyle = \"#000\";\n\t\t    ctx.fillRect((x * blockSize), (y * blockSize), \n                         blockSize, blockSize);\n\n            if (layout === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].BISCUIT) {\n                ctx.fillStyle = \"#FFF\";\n\t\t        ctx.fillRect((x * blockSize) + (blockSize / 2.5), \n                             (y * blockSize) + (blockSize / 2.5), \n                             blockSize / 6, blockSize / 6);\n\t        }\n        }\n        ctx.closePath();\t \n    };\n\n    reset();\n    \n    return {\n        \"draw\"         : draw,\n        \"drawBlock\"    : drawBlock,\n        \"drawPills\"    : drawPills,\n        \"block\"        : block,\n        \"setBlock\"     : setBlock,\n        \"reset\"        : reset,\n        \"isWallSpace\"  : isWall,\n        \"isFloorSpace\" : isFloorSpace,\n        \"height\"       : height,\n        \"width\"        : width,\n        \"blockSize\"    : blockSize\n    };\n};\n\n_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].Audio = function(game) {\n    \n    var files          = [], \n        endEvents      = [],\n        progressEvents = [],\n        playing        = [];\n    \n    function load(name, path, cb) { \n\n        var f = files[name] = document.createElement(\"audio\");\n\n        progressEvents[name] = function(event) { progress(event, name, cb); };\n        \n        f.addEventListener(\"canplaythrough\", progressEvents[name], true);\n        f.setAttribute(\"preload\", \"true\");\n        f.setAttribute(\"autobuffer\", \"true\");\n        f.setAttribute(\"src\", path);\n        f.pause();        \n    };\n\n    function progress(event, name, callback) { \n        if (event.loaded === event.total && typeof callback === \"function\") {\n            callback();\n            files[name].removeEventListener(\"canplaythrough\", \n                                            progressEvents[name], true);\n        }\n    };\n\n    function disableSound() {\n        for (var i = 0; i < playing.length; i++) {\n            files[playing[i]].pause();\n            files[playing[i]].currentTime = 0;\n        }\n        playing = [];\n    };\n\n    function ended(name) { \n\n        var i, tmp = [], found = false;\n\n        files[name].removeEventListener(\"ended\", endEvents[name], true);\n\n        for (let i = 0; i < playing.length; i++) {\n            if (!found && playing[i]) { \n                found = true;\n            } else { \n                tmp.push(playing[i]);\n            }\n        }\n        playing = tmp;\n    };\n\n    function play(name) { \n        if (!game.soundDisabled()) {\n            endEvents[name] = function() { ended(name); };\n            playing.push(name);\n            files[name].addEventListener(\"ended\", endEvents[name], true);\n            files[name].play();\n        }\n    };\n\n    function pause() { \n        for (var i = 0; i < playing.length; i++) {\n            files[playing[i]].pause();\n        }\n    };\n    \n    function resume() { \n        for (var i = 0; i < playing.length; i++) {\n            files[playing[i]].play();\n        }        \n    };\n    \n    return {\n        \"disableSound\" : disableSound,\n        \"load\"         : load,\n        \"play\"         : play,\n        \"pause\"        : pause,\n        \"resume\"       : resume\n    };\n};\n\nvar PACMAN = (function () {\n\n    var state        = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"WAITING\"],\n        audio        = null,\n        ghosts       = [],\n        ghostSpecs   = [],\n        eatenCount   = 0,\n        level        = 0,\n        tick         = 0,\n        ghostPos, userPos, \n        stateChanged = true,\n        timerStart   = null,\n        lastTime     = 0,\n        ctx          = null,\n        timer        = null,\n        map          = null,\n        users         = [],\n        stored       = null;\n    function setGhost(){\n        ghostSpecs   = [\"#00FFDE\", \"#FF0000\", \"#FFB8DE\", \"#FFB847\"]\n\n    }\n\n    function getTick() { \n        return tick;\n    };\n\n    function drawScore(text, position) {\n        ctx.fillStyle = \"#FFFFFF\";\n        ctx.font      = \"12px BDCartoonShoutRegular\";\n        ctx.fillText(text, \n                     (position[\"new\"][\"x\"] / 10) * map.blockSize, \n                     ((position[\"new\"][\"y\"] + 5) / 10) * map.blockSize);\n    }\n    \n    function dialog(text) {\n        ctx.fillStyle = \"#FFFF00\";\n        ctx.font      = \"18px Calibri\";\n        var width = ctx.measureText(text).width,\n            x     = ((map.width * map.blockSize) - width) / 2;        \n        ctx.fillText(text, x, (map.height * 10) + 8);\n    }\n\n    function soundDisabled() {\n        return localStorage[\"soundDisabled\"] === \"true\";\n    };\n    \n    function startLevel() {        \n        users.resetPosition();\n        for (var i = 0; i < ghosts.length; i += 1) { \n            ghosts[i].reset();\n        }\n        audio.play(\"start\");\n        timerStart = tick;\n        setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"COUNTDOWN\"]);\n    }    \n\n    function startNewGame() {\n        setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"WAITING\"]);\n        level = 1;\n        users.reset();\n        map.reset();\n        map.draw(ctx);\n        startLevel();\n    }\n\n    function keyDown(userIndex,direction) {\n  \n            return users.keyDown(userIndex,direction);\n        \n    }    \n\n    function loseLife() {        \n        setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"WAITING\"]);\n        users.loseLife();\n        if (users.getLives() > 0) {\n            startLevel();\n        }\n    }\n\n    function setState(nState) { \n        state = nState;\n        stateChanged = true;\n    };\n    \n    function collided(user, ghost) {\n        return (Math.sqrt(Math.pow(ghost.x - user.x, 2) + \n                          Math.pow(ghost.y - user.y, 2))) < 10;\n    };\n\n    function drawFooter() {\n        \n        var topLeft  = (map.height * map.blockSize),\n            textBase = topLeft + 17;\n        \n        ctx.fillStyle = \"#000000\";\n        ctx.fillRect(0, topLeft, (map.width * map.blockSize), 30);\n        \n        ctx.fillStyle = \"#FFFF00\";\n\n        for (var i = 0, len = users.getLives(); i < len; i++) {\n            ctx.fillStyle = \"#FFFF00\";\n            ctx.beginPath();\n            ctx.moveTo(150 + (25 * i) + map.blockSize / 2,\n                       (topLeft+1) + map.blockSize / 2);\n            \n            ctx.arc(150 + (25 * i) + map.blockSize / 2,\n                    (topLeft+1) + map.blockSize / 2,\n                    map.blockSize / 2, Math.PI * 0.25, Math.PI * 1.75, false);\n            ctx.fill();\n        }\n\n        ctx.fillStyle = !soundDisabled() ? \"#00FF00\" : \"#FF0000\";\n        ctx.font = \"bold 16px sans-serif\";\n        //ctx.fillText(\"âª\", 10, textBase);\n        ctx.fillText(\"s\", 10, textBase);\n\n        ctx.fillStyle = \"#FFFF00\";\n        ctx.font      = \"14px Calibri\";\n        ctx.fillText(\"Score: \" + users.theScore(), 30, textBase);\n        ctx.fillText(\"Level: \" + level, 260, textBase);\n    }\n\n    function redrawBlock(pos) {\n        map.drawBlock(Math.floor(pos.y/10), Math.floor(pos.x/10), ctx);\n        map.drawBlock(Math.ceil(pos.y/10), Math.ceil(pos.x/10), ctx);\n    }\n\n    function mainDraw() { \n\n        var diff, userPos, i, len, nScore;\n        \n        ghostPos = [];\n        userPos=[]\n\n        for (let i = 0, len = ghosts.length; i < len; i += 1) {\n            ghostPos.push(ghosts[i].move(ctx));\n        }\n        for (let i = 0, len = ghosts.length; i < len; i += 1) {\n            redrawBlock(ghostPos[i].old);\n        }\n        userPos = users.move(ctx);\n        userPos.forEach(pos=> redrawBlock(pos.old))\n  //TODO\n        //redrawBlock(userPos.old);\n        \n        for (let i = 0, len = ghosts.length; i < len; i += 1) {\n            ghosts[i].draw(ctx);\n        }    \n                 \n        users.draw(ctx);\n        \n        userPos = userPos[\"new\"];\n        \n        for (let i = 0, len = ghosts.length; i < len; i += 1) {\n            if (collided(userPos, ghostPos[i][\"new\"])) {\n                if (ghosts[i].isVunerable()) { \n                    audio.play(\"eatghost\");\n                    ghosts[i].eat();\n                    eatenCount += 1;\n                    nScore = eatenCount * 50;\n                    drawScore(nScore, ghostPos[i]);\n                    users.addScore(nScore);                    \n                    setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"EATEN_PAUSE\"]);\n                    timerStart = tick;\n                } else if (ghosts[i].isDangerous()) {\n                    audio.play(\"die\");\n                    setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DYING\"]);\n                    timerStart = tick;\n                }\n            }\n        }                             \n    };\n\n    function mainLoop() {\n\n        var diff;\n\n        if (state !== _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"PAUSE\"]) { \n            ++tick;\n        }\n\n        map.drawPills(ctx);\n\n        if (state === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"PLAYING\"]) {\n            mainDraw();\n        } else if (state === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"WAITING\"] && stateChanged) {            \n            stateChanged = false;\n            map.draw(ctx);\n            dialog(\"Press N to start a New game\");            \n        } else if (state === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"EATEN_PAUSE\"] && \n                   (tick - timerStart) > (_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS / 3)) {\n            map.draw(ctx);\n            setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"PLAYING\"]);\n        } else if (state === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DYING\"]) {\n            if (tick - timerStart > (_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS * 2)) { \n                loseLife();\n            } else { \n                redrawBlock(userPos);\n                for (let i = 0, len = ghosts.length; i < len; i += 1) {\n                    redrawBlock(ghostPos[i].old);\n                    ghostPos.push(ghosts[i].draw(ctx));\n                }                                   \n                users.drawDead(ctx, (tick - timerStart) / (_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS * 2));\n            }\n        } else if (state === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"COUNTDOWN\"]) {\n            \n            diff = 5 + Math.floor((timerStart - tick) / _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS);\n            \n            if (diff === 0) {\n                map.draw(ctx);\n                setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"PLAYING\"]);\n            } else {\n                if (diff !== lastTime) { \n                    lastTime = diff;\n                    map.draw(ctx);\n                    dialog(\"Starting in: \" + diff);\n                }\n            }\n        } \n\n        drawFooter();\n    }\n\n    function eatenPill() {\n        audio.play(\"eatpill\");\n        console.log(\"eat pill\")\n        timerStart = tick;\n        eatenCount = 0;\n        for (let i = 0; i < ghosts.length; i += 1) {\n            ghosts[i].makeEatable(ctx);\n        }        \n    };\n    \n    function completedLevel() {\n        setState(_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"WAITING\"]);\n        level += 1;\n        map.reset();\n        users.newLevel();\n        startLevel();\n    };\n\n    function keyPress(e) { \n        if (state !== _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"WAITING\"] && state !== _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"PAUSE\"]) { \n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    \n\n    function init(wrapper, root) {\n        \n        var i, len, ghost,\n            blockSize = wrapper.offsetWidth / 19,\n            canvas    = document.createElement(\"canvas\");\n        \n        canvas.setAttribute(\"width\", (blockSize * 19) + \"px\");\n        canvas.setAttribute(\"height\", (blockSize * 22) + 30 + \"px\");\n\n        wrapper.appendChild(canvas);\n\n        ctx  = canvas.getContext('2d');\n\n        audio = new _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].Audio({\"soundDisabled\":soundDisabled});\n        map   = new _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].Map(blockSize);\n        let user1  = new _pacnmanv2User__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({ \n            \"completedLevel\" : completedLevel, \n            \"eatenPill\"      : eatenPill,\n            name:\"Pacman 1\" \n            ,\n        }, map);\n        let user2 =  new _pacnmanv2User__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({ \n            \"completedLevel\" : completedLevel, \n            \"eatenPill\"      : eatenPill ,\n            name:\"Pacman 2\" \n\n        }, map);\n        users = new PacmanUsers();\n        users.addUser(user1)\n        users.addUser(user2)\n\n        for (let i = 0, len = ghostSpecs.length; i < len; i += 1) {\n            ghost = new _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].Ghost({\"getTick\":getTick}, map, ghostSpecs[i]);\n            ghosts.push(ghost);\n        }\n        \n        map.draw(ctx);\n        dialog(\"Loading ...\");\n\n        var extension = Modernizr.audio.ogg ? 'ogg' : 'mp3';\n\n        var audio_files = [\n            [\"start\", root + \"audio/opening_song.\" + extension],\n            [\"die\", root + \"audio/die.\" + extension],\n            [\"eatghost\", root + \"audio/eatghost.\" + extension],\n            [\"eatpill\", root + \"audio/eatpill.\" + extension],\n            [\"eating\", root + \"audio/eating.short.\" + extension],\n            [\"eating2\", root + \"audio/eating.short.\" + extension]\n        ];\n\n        load(audio_files, function() { loaded(); });\n    };\n\n    function load(arr, callback) { \n        \n        if (arr.length === 0) { \n            callback();\n        } else { \n            var x = arr.pop();\n            audio.load(x[0], x[1], function() { load(arr, callback); });\n        }\n    };\n        \n    function loaded() {\n\n        dialog(\"Press N to Start\");\n        \n        document.addEventListener(\"keydown\", keyDown, true);\n        document.addEventListener(\"keypress\", keyPress, true); \n        \n        timer = window.setInterval(mainLoop, 1000 / _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].FPS);\n    };\n    \n    return {\n        \"init\" : init,\n        \"move\": keyDown,\n        \"startNewGame\":startNewGame\n    };\n    \n}());\n\nclass PacmanUsers{\n    constructor(){\n        this.users = []\n    }\n\n   \n    addUser(user){\n        this.users.push(user);\n    }\n    newLevel(){\n        this.users.forEach(element =>element.newLevel());\n    }\n    keyDown(userIndex,direction){\n        this.users[userIndex].keyDown(direction)\n      \n    }\n    reset(){\n        this.users.forEach(element =>element.reset());\n\n    }\n    getLives(){\n        return 3;\n    }\n    theScore(){\n        return 3;\n    }\n    resetPosition(){\n        this.users.forEach(element =>element.resetPosition());\n\n    }\n    move(){\n        return this.users.map(element =>element.move());\n\n    }\n    draw(ctx){\n        this.users.forEach(element =>element.draw(ctx));\n\n    }\n\n\n}\n\n/* Human readable keyCode index */\n\n(function () {\n\t/* 0 - 9 */\n\tfor (var i = 48; i <= 57; i++) {\n        _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"KEY\"]['' + (i - 48)] = i;\n\t}\n\t/* A - Z */\n\tfor (let i = 65; i <= 90; i++) {\n        _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"KEY\"]['' + String.fromCharCode(i)] = i;\n\t}\n\t/* NUM_PAD_0 - NUM_PAD_9 */\n\tfor (let i = 96; i <= 105; i++) {\n        _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"KEY\"]['NUM_PAD_' + (i - 96)] = i;\n\t}\n\t/* F1 - F12 */\n\tfor (let i = 112; i <= 123; i++) {\n        _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"KEY\"]['F' + (i - 112 + 1)] = i;\n\t}\n})();\n\n\n\n_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].MAP = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n\t[0, 4, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 4, 0],\n\t[0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0],\n\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n\t[0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0],\n\t[0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0],\n\t[0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0],\n\t[2, 2, 2, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 2, 2, 2],\n\t[0, 0, 0, 0, 1, 0, 1, 0, 0, 3, 0, 0, 1, 0, 1, 0, 0, 0, 0],\n\t[2, 2, 2, 2, 1, 1, 1, 0, 3, 3, 3, 0, 1, 1, 1, 2, 2, 2, 2],\n\t[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0],\n\t[2, 2, 2, 0, 1, 0, 1, 1, 1, 2, 1, 1, 1, 0, 1, 0, 2, 2, 2],\n\t[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0],\n\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n\t[0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0],\n\t[0, 4, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 4, 0],\n\t[0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0],\n\t[0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0],\n\t[0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],\n\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n];\n\n_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"Pacman\"].WALLS = [\n    \n    [{\"move\": [0, 9.5]}, {\"line\": [3, 9.5]},\n     {\"curve\": [3.5, 9.5, 3.5, 9]}, {\"line\": [3.5, 8]},\n     {\"curve\": [3.5, 7.5, 3, 7.5]}, {\"line\": [1, 7.5]},\n     {\"curve\": [0.5, 7.5, 0.5, 7]}, {\"line\": [0.5, 1]},\n     {\"curve\": [0.5, 0.5, 1, 0.5]}, {\"line\": [9, 0.5]},\n     {\"curve\": [9.5, 0.5, 9.5, 1]}, {\"line\": [9.5, 3.5]}],\n\n    [{\"move\": [9.5, 1]},\n     {\"curve\": [9.5, 0.5, 10, 0.5]}, {\"line\": [18, 0.5]},\n     {\"curve\": [18.5, 0.5, 18.5, 1]}, {\"line\": [18.5, 7]},\n     {\"curve\": [18.5, 7.5, 18, 7.5]}, {\"line\": [16, 7.5]},\n     {\"curve\": [15.5, 7.5, 15.5, 8]}, {\"line\": [15.5, 9]},\n     {\"curve\": [15.5, 9.5, 16, 9.5]}, {\"line\": [19, 9.5]}],\n\n    [{\"move\": [2.5, 5.5]}, {\"line\": [3.5, 5.5]}],\n\n    [{\"move\": [3, 2.5]},\n     {\"curve\": [3.5, 2.5, 3.5, 3]},\n     {\"curve\": [3.5, 3.5, 3, 3.5]},\n     {\"curve\": [2.5, 3.5, 2.5, 3]},\n     {\"curve\": [2.5, 2.5, 3, 2.5]}],\n\n    [{\"move\": [15.5, 5.5]}, {\"line\": [16.5, 5.5]}],\n\n    [{\"move\": [16, 2.5]}, {\"curve\": [16.5, 2.5, 16.5, 3]},\n     {\"curve\": [16.5, 3.5, 16, 3.5]}, {\"curve\": [15.5, 3.5, 15.5, 3]},\n     {\"curve\": [15.5, 2.5, 16, 2.5]}],\n\n    [{\"move\": [6, 2.5]}, {\"line\": [7, 2.5]}, {\"curve\": [7.5, 2.5, 7.5, 3]},\n     {\"curve\": [7.5, 3.5, 7, 3.5]}, {\"line\": [6, 3.5]},\n     {\"curve\": [5.5, 3.5, 5.5, 3]}, {\"curve\": [5.5, 2.5, 6, 2.5]}],\n\n    [{\"move\": [12, 2.5]}, {\"line\": [13, 2.5]}, {\"curve\": [13.5, 2.5, 13.5, 3]},\n     {\"curve\": [13.5, 3.5, 13, 3.5]}, {\"line\": [12, 3.5]},\n     {\"curve\": [11.5, 3.5, 11.5, 3]}, {\"curve\": [11.5, 2.5, 12, 2.5]}],\n\n    [{\"move\": [7.5, 5.5]}, {\"line\": [9, 5.5]}, {\"curve\": [9.5, 5.5, 9.5, 6]},\n     {\"line\": [9.5, 7.5]}],\n    [{\"move\": [9.5, 6]}, {\"curve\": [9.5, 5.5, 10.5, 5.5]},\n     {\"line\": [11.5, 5.5]}],\n\n\n    [{\"move\": [5.5, 5.5]}, {\"line\": [5.5, 7]}, {\"curve\": [5.5, 7.5, 6, 7.5]},\n     {\"line\": [7.5, 7.5]}],\n    [{\"move\": [6, 7.5]}, {\"curve\": [5.5, 7.5, 5.5, 8]}, {\"line\": [5.5, 9.5]}],\n\n    [{\"move\": [13.5, 5.5]}, {\"line\": [13.5, 7]},\n     {\"curve\": [13.5, 7.5, 13, 7.5]}, {\"line\": [11.5, 7.5]}],\n    [{\"move\": [13, 7.5]}, {\"curve\": [13.5, 7.5, 13.5, 8]},\n     {\"line\": [13.5, 9.5]}],\n\n    [{\"move\": [0, 11.5]}, {\"line\": [3, 11.5]}, {\"curve\": [3.5, 11.5, 3.5, 12]},\n     {\"line\": [3.5, 13]}, {\"curve\": [3.5, 13.5, 3, 13.5]}, {\"line\": [1, 13.5]},\n     {\"curve\": [0.5, 13.5, 0.5, 14]}, {\"line\": [0.5, 17]},\n     {\"curve\": [0.5, 17.5, 1, 17.5]}, {\"line\": [1.5, 17.5]}],\n    [{\"move\": [1, 17.5]}, {\"curve\": [0.5, 17.5, 0.5, 18]}, {\"line\": [0.5, 21]},\n     {\"curve\": [0.5, 21.5, 1, 21.5]}, {\"line\": [18, 21.5]},\n     {\"curve\": [18.5, 21.5, 18.5, 21]}, {\"line\": [18.5, 18]},\n     {\"curve\": [18.5, 17.5, 18, 17.5]}, {\"line\": [17.5, 17.5]}],\n    [{\"move\": [18, 17.5]}, {\"curve\": [18.5, 17.5, 18.5, 17]},\n     {\"line\": [18.5, 14]}, {\"curve\": [18.5, 13.5, 18, 13.5]},\n     {\"line\": [16, 13.5]}, {\"curve\": [15.5, 13.5, 15.5, 13]},\n     {\"line\": [15.5, 12]}, {\"curve\": [15.5, 11.5, 16, 11.5]},\n     {\"line\": [19, 11.5]}],\n\n    [{\"move\": [5.5, 11.5]}, {\"line\": [5.5, 13.5]}],\n    [{\"move\": [13.5, 11.5]}, {\"line\": [13.5, 13.5]}],\n\n    [{\"move\": [2.5, 15.5]}, {\"line\": [3, 15.5]},\n     {\"curve\": [3.5, 15.5, 3.5, 16]}, {\"line\": [3.5, 17.5]}],\n    [{\"move\": [16.5, 15.5]}, {\"line\": [16, 15.5]},\n     {\"curve\": [15.5, 15.5, 15.5, 16]}, {\"line\": [15.5, 17.5]}],\n\n    [{\"move\": [5.5, 15.5]}, {\"line\": [7.5, 15.5]}],\n    [{\"move\": [11.5, 15.5]}, {\"line\": [13.5, 15.5]}],\n    \n    [{\"move\": [2.5, 19.5]}, {\"line\": [5, 19.5]},\n     {\"curve\": [5.5, 19.5, 5.5, 19]}, {\"line\": [5.5, 17.5]}],\n    [{\"move\": [5.5, 19]}, {\"curve\": [5.5, 19.5, 6, 19.5]},\n     {\"line\": [7.5, 19.5]}],\n\n    [{\"move\": [11.5, 19.5]}, {\"line\": [13, 19.5]},\n     {\"curve\": [13.5, 19.5, 13.5, 19]}, {\"line\": [13.5, 17.5]}],\n    [{\"move\": [13.5, 19]}, {\"curve\": [13.5, 19.5, 14, 19.5]},\n     {\"line\": [16.5, 19.5]}],\n\n    [{\"move\": [7.5, 13.5]}, {\"line\": [9, 13.5]},\n     {\"curve\": [9.5, 13.5, 9.5, 14]}, {\"line\": [9.5, 15.5]}],\n    [{\"move\": [9.5, 14]}, {\"curve\": [9.5, 13.5, 10, 13.5]},\n     {\"line\": [11.5, 13.5]}],\n\n    [{\"move\": [7.5, 17.5]}, {\"line\": [9, 17.5]},\n     {\"curve\": [9.5, 17.5, 9.5, 18]}, {\"line\": [9.5, 19.5]}],\n    [{\"move\": [9.5, 18]}, {\"curve\": [9.5, 17.5, 10, 17.5]},\n     {\"line\": [11.5, 17.5]}],\n\n    [{\"move\": [8.5, 9.5]}, {\"line\": [8, 9.5]}, {\"curve\": [7.5, 9.5, 7.5, 10]},\n     {\"line\": [7.5, 11]}, {\"curve\": [7.5, 11.5, 8, 11.5]},\n     {\"line\": [11, 11.5]}, {\"curve\": [11.5, 11.5, 11.5, 11]},\n     {\"line\": [11.5, 10]}, {\"curve\": [11.5, 9.5, 11, 9.5]},\n     {\"line\": [10.5, 9.5]}]\n];\n\n\n\n\n\n\nconst CONTROL_CODES = {\n \n   \n        up: _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"UP\"],\n        down: _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"DOWN\"],\n        left: _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"LEFT\"],\n        right: _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_1__[\"RIGHT\"]\n   \n  }\nclass PacmanV2{\n    constructor(){}\n    startGameplayNoGhost(){\n        window.setTimeout(()=> { \n            var el = document.getElementById(\"pacman\");\n            PACMAN.init(el, \"https://raw.githubusercontent.com/daleharvey/pacman/master/\");\n            this.startNewGame();\n        }, 0);\n\n  \n    }\n    startGameplayWithGhost(){\n        \n        window.setTimeout( ()=> { \n            var el = document.getElementById(\"pacman\");\n            PACMAN.init(el, \"https://raw.githubusercontent.com/daleharvey/pacman/master/\");\n            this.startNewGame();\n\n        }, 0);\n  \n    }\n    move(playerId,direction){\n        PACMAN.move(playerId-1,CONTROL_CODES[direction])\n    }\n    startNewGame(){\n        setTimeout(()=>{\n            PACMAN.startNewGame();\n        },3000)\n\n    }\n  \n  }\n  \n  /* harmony default export */ __webpack_exports__[\"default\"] = (new PacmanV2());\n\n\n  \n\n//# sourceURL=webpack:///./pacman-server/src/pacnmanv2.js?");

/***/ }),

/***/ "./pacman-server/src/pacnmanv2Const.js":
/*!*********************************************!*\
  !*** ./pacman-server/src/pacnmanv2Const.js ***!
  \*********************************************/
/*! exports provided: KEY, NONE, UP, LEFT, DOWN, RIGHT, WAITING, PAUSE, PLAYING, COUNTDOWN, EATEN_PAUSE, DYING, Pacman */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KEY\", function() { return KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NONE\", function() { return NONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UP\", function() { return UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEFT\", function() { return LEFT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOWN\", function() { return DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIGHT\", function() { return RIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WAITING\", function() { return WAITING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAUSE\", function() { return PAUSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PLAYING\", function() { return PLAYING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COUNTDOWN\", function() { return COUNTDOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EATEN_PAUSE\", function() { return EATEN_PAUSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DYING\", function() { return DYING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pacman\", function() { return Pacman; });\nlet KEY = { 'BACKSPACE': 8, 'TAB': 9, 'NUM_PAD_CLEAR': 12, 'ENTER': 13, 'SHIFT': 16, 'CTRL': 17, 'ALT': 18, 'PAUSE': 19, 'CAPS_LOCK': 20, 'ESCAPE': 27, 'SPACEBAR': 32, 'PAGE_UP': 33, 'PAGE_DOWN': 34, 'END': 35, 'HOME': 36, 'ARROW_LEFT': 37, 'ARROW_UP': 38, 'ARROW_RIGHT': 39, 'ARROW_DOWN': 40, 'PRINT_SCREEN': 44, 'INSERT': 45, 'DELETE': 46, 'SEMICOLON': 59, 'WINDOWS_LEFT': 91, 'WINDOWS_RIGHT': 92, 'SELECT': 93, 'NUM_PAD_ASTERISK': 106, 'NUM_PAD_PLUS_SIGN': 107, 'NUM_PAD_HYPHEN-MINUS': 109, 'NUM_PAD_FULL_STOP': 110, 'NUM_PAD_SOLIDUS': 111, 'NUM_LOCK': 144, 'SCROLL_LOCK': 145, 'SEMICOLON': 186, 'EQUALS_SIGN': 187, 'COMMA': 188, 'HYPHEN-MINUS': 189, 'FULL_STOP': 190, 'SOLIDUS': 191, 'GRAVE_ACCENT': 192, 'LEFT_SQUARE_BRACKET': 219, 'REVERSE_SOLIDUS': 220, 'RIGHT_SQUARE_BRACKET': 221, 'APOSTROPHE': 222 };\nvar NONE = 4,\n    UP = 3,\n    LEFT = 2,\n    DOWN = 1,\n    RIGHT = 11,\n    WAITING = 5,\n    PAUSE = 6,\n    PLAYING = 7,\n    COUNTDOWN = 8,\n    EATEN_PAUSE = 9,\n    DYING = 10,\n    Pacman = {};\n\nPacman.WALL = 0;\nPacman.BISCUIT = 1;\nPacman.EMPTY = 2;\nPacman.BLOCK = 3;\nPacman.PILL = 4;\n\n\n//# sourceURL=webpack:///./pacman-server/src/pacnmanv2Const.js?");

/***/ }),

/***/ "./pacman-server/src/pacnmanv2User.js":
/*!********************************************!*\
  !*** ./pacman-server/src/pacnmanv2User.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pacnmanv2Const */ \"./pacman-server/src/pacnmanv2Const.js\");\n\n\nlet User = function (game, map) {\n    \n    var position  = null,\n        direction = null,\n        eaten     = null,\n        due       = null, \n        lives     = null,\n        score     = 5,\n        keyMap    = {};\n    \n    keyMap[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"KEY\"].ARROW_LEFT]  = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"];\n    keyMap[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"KEY\"].ARROW_UP]    = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"UP\"];\n    keyMap[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"KEY\"].ARROW_RIGHT] = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"];\n    keyMap[_pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"KEY\"].ARROW_DOWN]  = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"DOWN\"];\n    let name = game.name\n\n    function addScore(nScore) { \n        score += nScore;\n        if (score >= 10000 && score - nScore < 10000) { \n            lives += 1;\n        }\n    };\n\n    function theScore() { \n        return score;\n    };\n\n    function loseLife() { \n        lives -= 1;\n    };\n\n    function getLives() {\n        return lives;\n    };\n\n    function initUser() {\n        score = 0;\n        lives = 3;\n        newLevel();\n    }\n    \n    function newLevel() {\n        resetPosition();\n        eaten = 0;\n    };\n    \n    function resetPosition() {\n        position = {\"x\": 90, \"y\": 120};\n        direction = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"];\n        due = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"];\n    };\n    \n    function reset() {\n        initUser();\n        resetPosition();\n    };        \n    \n    function keyDown(direction) {\n            due = direction;\n            console.log(direction)\n           \n            return false;\n       \n\t};\n\n    function getNewCoord(dir, current) {   \n        return {\n            \"x\": current.x + (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"] && -2 || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"] && 2 || 0),\n            \"y\": current.y + (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"DOWN\"] && 2 || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"UP\"]    && -2 || 0)\n        };\n    };\n\n    function onWholeSquare(x) {\n        return x % 10 === 0;\n    };\n\n    function pointToCoord(x) {\n        return Math.round(x/10);\n    };\n    \n    function nextSquare(x, dir) {\n        var rem = x % 10;\n        if (rem === 0) { \n            return x; \n        } else if (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"] || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"DOWN\"]) { \n            return x + (10 - rem);\n        } else {\n            return x - rem;\n        }\n    };\n\n    function next(pos, dir) {\n        return {\n            \"y\" : pointToCoord(nextSquare(pos.y, dir)),\n            \"x\" : pointToCoord(nextSquare(pos.x, dir)),\n        };                               \n    };\n\n    function onGridSquare(pos) {\n        return onWholeSquare(pos.y) && onWholeSquare(pos.x);\n    };\n\n    function isOnSamePlane(due, dir) { \n        return ((due === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"] || due === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"]) && \n                (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"] || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"])) || \n            ((due === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"UP\"] || due === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"DOWN\"]) && \n             (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"UP\"] || dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"DOWN\"]));\n    };\n\n    function move() {\n        \n        var npos        = null, \n            nextWhole   = null, \n            oldPosition = position,\n            block       = null;\n        \n        if (due !== direction) {\n            npos = getNewCoord(due, position);\n            \n            if (isOnSamePlane(due, direction) || \n                (onGridSquare(position) && \n                 map.isFloorSpace(next(npos, due)))) {\n                direction = due;\n            } else {\n                npos = null;\n            }\n        }\n\n        if (npos === null) {\n            npos = getNewCoord(direction, position);\n        }\n        \n        if (onGridSquare(position) && map.isWallSpace(next(npos, direction))) {\n            direction = _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"NONE\"];\n        }\n\n        if (direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"NONE\"]) {\n            return {\"new\" : position, \"old\" : position};\n        }\n        \n        if (npos.y === 100 && npos.x >= 190 && direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"]) {\n            npos = {\"y\": 100, \"x\": -10};\n        }\n        \n        if (npos.y === 100 && npos.x <= -12 && direction === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"]) {\n            npos = {\"y\": 100, \"x\": 190};\n        }\n        \n        position = npos;        \n        nextWhole = next(position, direction);\n        \n        block = map.block(nextWhole);        \n        \n        if ((isMidSquare(position.y) || isMidSquare(position.x)) &&\n            block === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"Pacman\"].BISCUIT || block === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"Pacman\"].PILL) {\n            \n            map.setBlock(nextWhole, _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"Pacman\"].EMPTY);           \n            addScore((block === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"Pacman\"].BISCUIT) ? 10 : 50);\n            eaten += 1;\n            \n            if (eaten === 182) {\n                console.log(  name + \"complete\")\n              \n                game.completedLevel();\n            }\n            \n            if (block === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"Pacman\"].PILL) { \n                console.log(  name + \"eat pill\")\n\n                game.eatenPill();\n            }\n        }   \n                \n        return {\n            \"new\" : position,\n            \"old\" : oldPosition\n        };\n    };\n\n    function isMidSquare(x) { \n        var rem = x % 10;\n        return rem > 3 || rem < 7;\n    };\n\n    function calcAngle(dir, pos) { \n        if (dir == _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT\"] && (pos.x % 10 < 5)) {\n            return {\"start\":0.25, \"end\":1.75, \"direction\": false};\n        } else if (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"DOWN\"] && (pos.y % 10 < 5)) { \n            return {\"start\":0.75, \"end\":2.25, \"direction\": false};\n        } else if (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"UP\"] && (pos.y % 10 < 5)) { \n            return {\"start\":1.25, \"end\":1.75, \"direction\": true};\n        } else if (dir === _pacnmanv2Const__WEBPACK_IMPORTED_MODULE_0__[\"LEFT\"] && (pos.x % 10 < 5)) {             \n            return {\"start\":0.75, \"end\":1.25, \"direction\": true};\n        }\n        return {\"start\":0, \"end\":2, \"direction\": false};\n    };\n\n    function drawDead(ctx, amount) { \n\n        var size = map.blockSize, \n            half = size / 2;\n\n        if (amount >= 1) { \n            return;\n        }\n\n        ctx.fillStyle = \"#FFFF00\";\n        ctx.beginPath();        \n        ctx.moveTo(((position.x/10) * size) + half, \n                   ((position.y/10) * size) + half);\n        \n        ctx.arc(((position.x/10) * size) + half, \n                ((position.y/10) * size) + half,\n                half, 0, Math.PI * 2 * amount, true); \n        \n        ctx.fill();    \n    };\n\n    function draw(ctx) { \n\n        var s     = map.blockSize, \n            angle = calcAngle(direction, position);\n\n        ctx.fillStyle = \"#FFFF00\";\n\n        ctx.beginPath();        \n\n        ctx.moveTo(((position.x/10) * s) + s / 2,\n                   ((position.y/10) * s) + s / 2);\n        \n        ctx.arc(((position.x/10) * s) + s / 2,\n                ((position.y/10) * s) + s / 2,\n                s / 2, Math.PI * angle.start, \n                Math.PI * angle.end, angle.direction); \n        \n        ctx.fill();    \n    };\n    \n    initUser();\n\n    return {\n        \"draw\"          : draw,\n        \"drawDead\"      : drawDead,\n        \"loseLife\"      : loseLife,\n        \"getLives\"      : getLives,\n        \"score\"         : score,\n        \"addScore\"      : addScore,\n        \"theScore\"      : theScore,\n        \"keyDown\"       : keyDown,\n        \"move\"          : move,\n        \"newLevel\"      : newLevel,\n        \"reset\"         : reset,\n        \"resetPosition\" : resetPosition\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (User);\n\n//# sourceURL=webpack:///./pacman-server/src/pacnmanv2User.js?");

/***/ })

/******/ });